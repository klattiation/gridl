!function(r,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define("gridl",[],n):"object"==typeof exports?exports.gridl=n():r.gridl=n()}("undefined"!=typeof self?self:this,function(){return function(r){function n(e){if(t[e])return t[e].exports;var o=t[e]={i:e,l:!1,exports:{}};return r[e].call(o.exports,o,o.exports,n),o.l=!0,o.exports}var t={};return n.m=r,n.c=t,n.d=function(r,t,e){n.o(r,t)||Object.defineProperty(r,t,{configurable:!1,enumerable:!0,get:e})},n.n=function(r){var t=r&&r.__esModule?function(){return r.default}:function(){return r};return n.d(t,"a",t),t},n.o=function(r,n){return Object.prototype.hasOwnProperty.call(r,n)},n.p="",n(n.s=0)}([function(r,n,t){"use strict";function e(r){if(Array.isArray(r)){for(var n=0,t=Array(r.length);n<r.length;n++)t[n]=r[n];return t}return Array.from(r)}function o(r,n){var t="1d"===r.arrayType?n.length:n.reduce(function(r,n){return r+n.length},0);return r.columns||r.rows?r.columns&&!r.rows&&t%r.columns==0?r.rows=t/r.columns:!r.columns&&r.rows&&t%r.rows==0&&(r.columns=t/r.rows):"2d"===r.arrayType?(r.rows=n.length,r.columns=n[0].length):(r.rows=1,r.columns=n.length),r}function i(r,n,t,e){var o=m(t,n);if(isNaN(o))throw new Error("Trying to access value with invalid index or position. "+t);return void 0===e?r[o]:(r[o]=e,this)}function u(r,n,t,e,o){var i=x(e,n);return o.forEach(function(e,o){var u=[0,o+i[1]];u[1]>=t||e.forEach(function(t,e){u[0]=e+i[0],u[0]>=n||r.valueAt(u,t)})}),r}function a(r,n,t,e,o){for(var i=x(e,n),u=[Math.min(i[0]+o[0],n),Math.min(i[1]+o[1],t)],a=[],c=i[1];c<u[1];c++){var f=c-i[1];a[f]||(a[f]=[]);for(var s=i[0];s<u[0];s++){var d=s-i[0];a[f][d]=r.valueAt([s,c])}}return a}function c(r,n,t){var e=n.findIndex(t);return e>=0?r.index2pos(e):void 0}function f(r,n,t,e,o){var i=r.getAreaAt(t,e),u=b(i),a=u.findIndex(o);if(a>=0){var c=i[0].length,f=x(t,n),s=v(a,c);return[f[0]+s[0],f[1]+s[1]]}}function s(r,n,t,e,o){var i=r.findPositionInArea(t,e,o);return i?r.pos2index(i):-1}function d(r,n,t,e){var o=x(t,r),i=o[0]+e[0].length<=r,u=o[1]+e.length<=n;return i&&u}function l(r){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!Array.isArray(r))throw new Error("Trying to use gridl with none-array value for data.");if(n.arrayType&&!p.includes(n.arrayType))throw new Error("Trying to use invalid arrayType. expected: ("+p.join("|")+"), actually: "+n.arrayType);var t=A(n,r),o=t.columns,l=t.rows,y="1d"===t.arrayType?[].concat(e(r)):g(r,o,l),m={};return m.columns=function(){return o},m.rows=function(){return l},m.size=function(){return[o,l]},m.index2pos=function(r){return v(r,o)},m.pos2index=function(r){return h(r,o)},m.valueAt=i.bind(m,y,o),m.setAreaAt=function(r,n){return u(m,o,l,r,n)},m.getAreaAt=function(r,n){return a(m,o,l,r,n)},m.findIndex=function(r){return y.findIndex(r)},m.findPosition=function(r){return c(m,y,r)},m.findPositionInArea=function(r,n,t){return f(m,o,r,n,t)},m.findIndexInArea=function(r,n,t){return s(m,o,r,n,t)},m.checkAreaFitsAt=function(r,n){return d(o,l,r,n)},m.toArray1D=function(){return[].concat(e(y))},m.toArray2D=w.bind(m,y,o),m.serialize=function(){return{opts:t,data:y}},m}Object.defineProperty(n,"__esModule",{value:!0}),n.gridl=l;var y={arrayType:"1d"},p=Object.freeze(["1d","2d"]),v=n.index2pos=function(r,n){return[r%n,Math.floor(r/n)]},h=n.pos2index=function(r,n){return r[0]+r[1]*n},w=n.toArray2D=function(r,n){return r.reduce(function(r,t,e){var o=v(e,n);return r[o[1]]||(r[o[1]]=[]),r[o[1]][o[0]]=t,r},[])},g=n.toArray1D=function(r,n,t){if(t!==r.length){var o="(expected: "+t+", actually: "+r.length+")";throw new Error("Trying to convert invalid array2D with invalid number of rows to array1D. "+o)}return r.reduce(function(r,t){if(n!==t.length){var o="(expected: "+n+", actually: "+t.length+")";throw new Error("Trying to convert invalid array2D with invalid number of columns to array1D. "+o)}return[].concat(e(r),e(t))},[])},A=function(r,n){return Object.assign({},y,o(Object.assign({},y,r),n))},m=function(r,n){if(!n)throw new Error("_toIndex() needs to know the number of columns.");return Array.isArray(r)?h(r,n):parseInt(r)},x=function(r,n){if(!n)throw new Error("_toPosition() needs to know the number of columns.");return Array.isArray(r)?r:v(r,n)},b=function(r){return r.reduce(function(r,n){return[].concat(e(r),e(n))},[])};n.default=l}])});