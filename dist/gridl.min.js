!function(n,r){"object"==typeof exports&&"object"==typeof module?module.exports=r():"function"==typeof define&&define.amd?define("gridl",[],r):"object"==typeof exports?exports.gridl=r():n.gridl=r()}("undefined"!=typeof self?self:this,function(){return function(n){function r(i){if(t[i])return t[i].exports;var e=t[i]={i:i,l:!1,exports:{}};return n[i].call(e.exports,e,e.exports,r),e.l=!0,e.exports}var t={};return r.m=n,r.c=t,r.d=function(n,t,i){r.o(n,t)||Object.defineProperty(n,t,{configurable:!1,enumerable:!0,get:i})},r.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return r.d(t,"a",t),t},r.o=function(n,r){return Object.prototype.hasOwnProperty.call(n,r)},r.p="",r(r.s=0)}([function(n,r,t){"use strict";function i(n){if(Array.isArray(n)){for(var r=0,t=Array(n.length);r<n.length;r++)t[r]=n[r];return t}return Array.from(n)}function e(n){if(!Array.isArray(n))throw new Error("Trying to import data that is not an array.");n.forEach(function(r,t){if(!Array.isArray(r))throw new Error("Trying to import data that is not an array.");if(t>0&&n[t-1].length!==r.length)throw new Error("Trying to import data with different row lengths.");if(r.length<1)throw new Error("Trying to import grid without any columns. You need to provide at least one column.")})}function o(n,r,t){var i=O(t,r);if(!isNaN(i))return n[i]}function u(n,r,t,i,e){var o=O(i,t);return isNaN(o)||(r[o]=e),n}function a(n,r,t,i,e){var o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[0,0],u=V(i,o);return e.forEach(function(i,e){var o=[0,e+u[1]];o[1]>=t||i.forEach(function(t,i){o[0]=i+u[0],o[0]>=r||n.setValueAt(o,t)})}),n}function f(n,r,t,i,e){for(var o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[0,0],u=V(i,o),a=[Math.min(u[0]+e[0],r),Math.min(u[1]+e[1],t)],f=[Math.max(0,u[0]),Math.max(0,u[1])],c=[],s=f[1];s<a[1];s++){var l=s-f[1];c[l]||(c[l]=[]);for(var h=f[0];h<a[0];h++){var v=h-f[0];c[l][v]=n.valueAt([h,s])}}return c}function c(n,r,t){var i=r.findIndex(t);return i>=0?R(i,n):void 0}function s(n,r,t,i,e){var o=n.getAreaAt(t,i),u=j(o),a=u.findIndex(function(t,i){return e(t,R(i,r),n)});if(a>=0){var f=o[0].length,c=R(a,f);return[t[0]+c[0],t[1]+c[1]]}}function l(n,r,t,i){var e=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[0,0],o=V(t,e),u=o[0]>=0&&o[0]+i[0].length<=n,a=o[1]>=0&&o[1]+i.length<=r;return u&&a}function h(n,r,t){if(!Array.isArray(t))throw new Error("Trying to go to an invalid position. Given: "+t);if(H([n,r],t))throw new Error("Trying to go to an invalid position. Given: "+t);return t}function v(n,r,t,i){var e=L(t,i);if(H([n,r],e))throw new Error("Trying to walk to an invalid position. Position: "+e);return e}function d(n,r,t,i,e){var o=O(i,r),u=[r,t];if(isNaN(o)||H(u,i))throw new Error("Trying to move cell from an invalid position. Given: ["+i+"]");var a=O(e,r);if(isNaN(a)||H(u,e))throw new Error("Trying to move cell to an invalid position. Given: ["+e+"]");D(n,o,a)}function w(n,r,t,i,e){if(i<0||i>=t)throw new Error("Trying to move row from an invalid position. Given: "+i);if(e<0||e>=t)throw new Error("Trying to move row to an invalid position. Given: "+e);return j(D(n,i,e))}function m(n,r,t,i,e){if(i<0||i>=r)throw new Error("Trying to move column from an invalid position. Given: "+i);if(e<0||e>=r)throw new Error("Trying to move column to an invalid position. Given: "+e);var o=n.map(function(n){return D(n,i,e)});return j(o)}function p(n,r,t,i,e){if(e<0||e>t)throw new Error("Trying to add row at an invalid position. Given: "+e);if(i.length!==r)throw new Error("Trying to add a row that contains an invalid amount of cells. Expected: "+r+", Given: "+i.length);return n.splice(e,0,i),n}function g(n,r,t,i,e){if(e<0||e>r)throw new Error("Trying to add column at an invalid position. Given: "+e);if(i.length!==t)throw new Error("Trying to add a column that contains an invalid amount of cells. Expected: "+t+", Given: "+i.length);return n.map(function(n,r){return n.splice(e,0,i[r]),n})}function y(n,r,t){if(t<0||t>=r)throw new Error("Trying to remove a row at an invalid position. Given: "+t);if(r<=1)throw new Error("Cannot remove row because the grid would be empty after it.");return n.splice(t,1),n}function E(n,r,t){if(t<0||t>=r)throw new Error("Trying to remove a column at an invalid position. Given: "+t);if(r<=1)throw new Error("Cannot remove column because the grid would be empty after it.");return n.map(function(n){return n.filter(function(n,r){return r!==t})})}function A(n,r,t,i,e){if(i[0]<0||i[0]>=r||i[1]<0||i[1]>=t)throw new Error("Trying to clip data at an invalid position. Given: "+i);var o=L(i,e);return n.filter(function(n,r){return r>=i[1]&&r<o[1]}).map(function(n){return n.filter(function(n,r){return r>=i[0]&&r<o[0]})})}function T(n,r,t){var i=n.size();if(H(i,r)||H(i,t))throw new Error("Trying to swap cells with an invalid position.");var e=n.valueAt(r);return n.setValueAt(r,n.valueAt(t)),n.setValueAt(t,e),n}function G(n,r,t,i){if(t<0||t>=r)throw new Error("Trying to swap rows from an invalid position. Given: "+t);if(i<0||i>=r)throw new Error("Trying to swap rows to an invalid position. Given: "+i);return z(n,t,i),j(n)}function N(n,r,t,i){if(t<0||t>=r)throw new Error("Trying to swap columns from an invalid position. Given: "+t);if(i<0||i>=r)throw new Error("Trying to swap columns to an invalid position. Given: "+i);return n.map(function(n){return z(n,t,i),n}),j(n)}function x(n,r,t){var i=t%4;switch(i<0?i+4:i){case 0:return n;case 1:return Array.from({length:r},function(r,t){return P(n,t).reverse()});case 2:return n.reverse().map(function(n,r){return n.reverse()});case 3:return Array.from({length:r},function(t,i){return P(n,r-1-i)});default:throw new Error("Trying to rotate the grid with an invalid steps parameter. Given: "+t)}}function b(n,r){if(void 0===r)return n.reverse();var t=Y(r,0,n.length-1),e=n.filter(function(n,r){return r<t});return[].concat(i(n.filter(function(n,r){return r>t}).reverse()),[n[t]],i(e.reverse()))}function C(n){var r=this;e(n);var t=n.length,i=n[0].length,k=j(n),I=[0,0];return this.numColumns=function(){return i},this.numRows=function(){return t},this.size=function(){return[i,t]},this.setValue=function(n){return u(r,k,i,I,n)},this.value=function(n){return void 0===n?o(k,i,I):u(r,k,i,I,n)},this.setValueAt=function(n,t){return u(r,k,i,n,t)},this.valueAt=function(n,t){return void 0===t?o(k,i,n):u(r,k,i,n,t)},this.moveCell=function(n,e){return d(k,i,t,n,e),r},this.moveAbs=function(n){return d(k,i,t,I,n),r},this.moveRel=function(n){return r.moveCell(I,L(I,n))},this.moveRow=function(n,e){return k=w(r.data(),i,t,n,e),r},this.moveColumn=function(n,e){return k=m(r.data(),i,t,n,e),r},this.column=function(n){return P(r.data(),n)},this.row=function(n){return F(r.data(),n)},this.addRow=function(n,e){var o=p(r.data(),i,t,n,e);return k=j(o),t=o.length,r},this.addColumn=function(n,e){var o=g(r.data(),i,t,n,e);return k=j(o),i=o[0].length,r},this.removeRow=function(n){var i=y(r.data(),t,n);return k=j(i),t=i.length,r},this.removeColumn=function(n){var t=E(r.data(),i,n);return k=j(t),i=t[0].length,r},this.clipAt=function(n,e){var o=A(r.data(),i,t,n,e);return k=j(o),t=o.length,i=o[0].length,r},this.clip=function(n){return r.clipAt(I,n)},this.swapCells=function(n,t){return T(r,n,t)},this.swapCell=function(n){return T(r,I,n)},this.swapRows=function(n,i){return k=G(r.data(),t,n,i),r},this.swapColumns=function(n,t){return k=N(r.data(),i,n,t),r},this.setAreaAt=function(n,e,o){return a(r,i,t,n,e,o)},this.setArea=function(n,e){return a(r,i,t,I,n,e)},this.getAreaAt=function(n,e,o){return f(r,i,t,n,e,o)},this.getArea=function(n,e){return f(r,i,t,I,n,e)},this.areaFitsAt=function(n,r,e){return l(i,t,n,r,e)},this.areaFits=function(n,r){return l(i,t,I,n,r)},this.find=function(n){return c(i,k,function(t,e){return n(t,R(e,i),r)})},this.findInArea=function(n,t,e){return s(r,i,n,t,e)},this.data=function(){return _(k,i)},this.rotate=function(n){var e=x(r.data(),i,n);return k=j(e),t=e.length,i=e[0].length,r},this.mirrorX=function(n){return k=j(b(r.data(),n)),r},this.mirrorY=function(n){var t=r.data();return k=j(t.map(function(r){return b(r,n)})),r},this.goto=function(n){var e=h(i,t,n);return I[0]=e[0],I[1]=e[1],r},this.walk=function(n){var e=v(i,t,I,n);return I[0]=e[0],I[1]=e[1],r},this.position=function(){return[I[0],I[1]]},this.map=function(n){var t=k.map(function(t,e){return n(t,R(e,i),r)});return new C(_(t,i))},this.forEach=function(n){return k.forEach(function(t,e){return n(t,R(e,i),r)}),r},this.clone=function(){return new C(_(k,i)).goto(I)},this}function k(n,r){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:function(){return null},i=parseInt(n),e=parseInt(r);if(i<1||isNaN(i))throw new Error("You need to specify at least one column. Given: "+n);if(e<1||isNaN(e))throw new Error("You need to specify at least one row. Given: "+r);return Array.from({length:e},function(n,r){return Array.from({length:i},function(n,i){return t({column:i,row:r})})})}function I(n){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:function(){return null},t=parseInt(n);if(t<1||isNaN(t))throw new Error("Trying to make a list with an invalid length. Given: "+n);return Array.from({length:t},function(n,t){return r(t)})}function M(n,r,t){return new C(k(n,r,t))}Object.defineProperty(r,"__esModule",{value:!0}),r.makeGrid=k,r.makeList=I,r.make=M;var R=function(n,r){return[n%r,Math.floor(n/r)]},O=function(n,r){return n&&n[0]+n[1]*r},_=function(n,r){return n.reduce(function(n,t,i){var e=R(i,r);return n[e[1]]||(n[e[1]]=[]),n[e[1]][e[0]]=t,n},[])},j=function(n){return n.reduce(function(n,r){return[].concat(i(n),i(r))},[])},P=function(n,r){if(r>=0&&r<n[0].length)return n.map(function(n){return n[r]})},F=function(n,r){return n[r]},L=function(n,r){return[n[0]+r[0],n[1]+r[1]]},V=function(n,r){return[n[0]-r[0],n[1]-r[1]]},Y=function(n,r,t){return Math.max(Math.min(n,t),r)},z=function(n,r,t){var i=n[r];n[r]=n[t],n[t]=i},D=function(n,r,t){var i=n[r];return n.splice(r,1),n.splice(t,0,i),n},H=function(n,r){return r[0]<0||r[0]>=n[0]||r[1]<0||r[1]>=n[1]},U=r.directions=Object.freeze({UP:[0,-1],UP_RIGHT:[1,-1],RIGHT:[1,0],DOWN_RIGHT:[1,1],DOWN:[0,1],DOWN_LEFT:[-1,1],LEFT:[-1,0],UP_LEFT:[-1,-1]}),W=function(n){return new C(n)};W.directions=U,W.make=M,W.makeGrid=k,W.makeList=I,r.default=W}])});