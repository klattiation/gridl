!function(r,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define("gridl",[],n):"object"==typeof exports?exports.gridl=n():r.gridl=n()}("undefined"!=typeof self?self:this,function(){return function(r){function n(t){if(e[t])return e[t].exports;var o=e[t]={i:t,l:!1,exports:{}};return r[t].call(o.exports,o,o.exports,n),o.l=!0,o.exports}var e={};return n.m=r,n.c=e,n.d=function(r,e,t){n.o(r,e)||Object.defineProperty(r,e,{configurable:!1,enumerable:!0,get:t})},n.n=function(r){var e=r&&r.__esModule?function(){return r.default}:function(){return r};return n.d(e,"a",e),e},n.o=function(r,n){return Object.prototype.hasOwnProperty.call(r,n)},n.p="",n(n.s=0)}([function(r,n,e){"use strict";function t(r){if(Array.isArray(r)){for(var n=0,e=Array(r.length);n<r.length;n++)e[n]=r[n];return e}return Array.from(r)}function o(r){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!Array.isArray(r))throw new Error("Trying to use gridl with none-array value for data.");if(n.arrayType&&!d.includes(n.arrayType))throw new Error("Trying to use invalid arrayType. expected: ("+d.join("|")+"), actually: "+n.arrayType);var e=f(n,r),o="1d"===e.arrayType?[].concat(t(r)):c(r,e.columns,e.rows);return{columns:function(){return e.columns},rows:function(){return e.rows},size:function(){return[e.columns,e.rows]},index2pos:function(r){return u(r,e.columns)},pos2index:function(r){return a(r,e.columns)},toArray1D:function(){return[].concat(t(o))},toArray2D:i.bind(this,o,e.columns),serialize:function(){return{opts:e,data:o}}}}Object.defineProperty(n,"__esModule",{value:!0}),n.gridl=o;var u=function(r,n){return[r%n,Math.floor(r/n)]};n.index2pos=u;var a=function(r,n){return r[0]+r[1]*n};n.pos2index=a;var i=n.toArray2D=function(r,n){return r.reduce(function(r,e,t){var o=u(t,n);return r[o[1]]||(r[o[1]]=[]),r[o[1]][o[0]]=e,r},[])},c=n.toArray1D=function(r,n,e){if(e!==r.length){var o="(expected: "+e+", actually: "+r.length+")";throw new Error("Trying to convert invalid array2D with invalid number of rows to array1D. "+o)}return r.reduce(function(r,e){if(n!==e.length){var o="(expected: "+n+", actually: "+e.length+")";throw new Error("Trying to convert invalid array2D with invalid number of columns to array1D. "+o)}return[].concat(t(r),t(e))},[])},l=function(r,n){var e="1d"===r.arrayType?n.length:n.reduce(function(r,n){return r+n.length},0);return r.columns||r.rows?r.columns&&!r.rows&&e%r.columns==0?r.rows=e/r.columns:!r.columns&&r.rows&&e%r.rows==0&&(r.columns=e/r.rows):"2d"===r.arrayType?(r.rows=n.length,r.columns=n[0].length):"1d"===r.arrayType&&(r.rows=1,r.columns=n.length),r},s={arrayType:"1d"},f=function(r,n){return Object.assign({},s,l(Object.assign({},s,r),n))},d=Object.freeze(["1d","2d"]);n.default={pos2index:a,index2pos:u,toArray2D:i,toArray1D:c,gridl:o}}])});