{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap c84d82565ea6cb452c0e","webpack:///./src/index.js"],"names":["_isValidGridArray","data","Array","isArray","Error","forEach","row","i","length","_index2pos","index","columns","Math","floor","_pos2index","position","_toArray2D","array1D","reduce","res","cell","pos","_flatten","array2D","_addPositions","p1","p2","_move","fromIndex","toIndex","splice","_isNotInArea","areaSize","_getValueAt","_data","isNaN","_setValueAt","api","value","_setAreaAt","rows","area","r","targetPos","c","setValueAt","_getAreaAt","size","end","min","rArea","cArea","getValueAt","_findPosition","callback","findIndex","undefined","_findPositionInArea","getAreaAt","flat","areaIndex","areaColumns","posInArea","_checkAreaFitsAt","fitsHorizontally","fitsVertically","_getRelativePosition","startPos","direction","_moveCell","from","to","_moveRow","_grid","_columns","_rows","yFrom","yTo","_moveColumn","grid","xFrom","xTo","newGrid","map","_addRowAt","y","_addColumnAt","column","x","_removeRowAt","_removeColumnAt","filter","v","_clip","endPoint","_swap","arr","i1","i2","tmp","_swapCells","pos1","pos2","_swapRows","y1","y2","_swapColumns","x1","x2","gridl","getRelativeValue","getRelativePosition","moveCell","moveCellFrom","moveRow","getData","moveColumn","addRowAt","addColumnAt","removeRowAt","removeColumnAt","clip","swapCells","swapRows","swapColumns","setAreaAt","checkAreaFitsAt","findPosition","findPositionInArea","directions","Object","freeze","TOP","TOP_RIGHT","RIGHT","BOTTOM_RIGHT","BOTTOM","BOTTOM_LEFT","LEFT","TOP_LEFT","generateData","parsedColumns","parseInt","parsedRows","vr","vc","generate"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;AC7DA,SAASA,iBAAT,CAA2BC,IAA3B,EAAiC;AAC7B,QAAI,CAACC,MAAMC,OAAN,CAAcF,IAAd,CAAL,EAA0B;AACtB,cAAM,IAAIG,KAAJ,CAAU,6CAAV,CAAN;AACH;AACDH,SAAKI,OAAL,CAAa,UAACC,GAAD,EAAMC,CAAN,EAAY;AACrB,YAAI,CAACL,MAAMC,OAAN,CAAcG,GAAd,CAAL,EAAyB;AACrB,kBAAM,IAAIF,KAAJ,CAAU,6CAAV,CAAN;AACH;AACD,YAAIG,IAAI,CAAJ,IAASN,KAAKM,IAAI,CAAT,EAAYC,MAAZ,KAAuBF,IAAIE,MAAxC,EAAgD;AAC5C,kBAAM,IAAIJ,KAAJ,CAAU,mDAAV,CAAN;AACH;AACD,YAAIE,IAAIE,MAAJ,GAAa,CAAjB,EAAoB;AAChB,kBAAM,IAAIJ,KAAJ,CAAU,qFAAV,CAAN;AACH;AACJ,KAVD;AAWH;;AAED;;;;;;;AAOA,IAAMK,aAAa,SAAbA,UAAa,CAACC,KAAD,EAAQC,OAAR;AAAA,WAAoB,CAACD,QAAQC,OAAT,EAAkBC,KAAKC,KAAL,CAAWH,QAAQC,OAAnB,CAAlB,CAApB;AAAA,CAAnB;;AAEA;;;;;;;AAOA,IAAMG,aAAa,SAAbA,UAAa,CAACC,QAAD,EAAWJ,OAAX;AAAA,WAAuBI,YAAYA,SAAS,CAAT,IAAcA,SAAS,CAAT,IAAcJ,OAA/D;AAAA,CAAnB;;AAEA;;;;;;;AAOA,IAAMK,aAAa,SAAbA,UAAa,CAACC,OAAD,EAAUN,OAAV;AAAA,WAAsBM,QAAQC,MAAR,CAAe,UAACC,GAAD,EAAMC,IAAN,EAAYV,KAAZ,EAAsB;AAC1E,YAAMW,MAAMZ,WAAWC,KAAX,EAAkBC,OAAlB,CAAZ;AACA,YAAI,CAACQ,IAAIE,IAAI,CAAJ,CAAJ,CAAL,EAAkB;AACdF,gBAAIE,IAAI,CAAJ,CAAJ,IAAc,EAAd;AACH;AACDF,YAAIE,IAAI,CAAJ,CAAJ,EAAYA,IAAI,CAAJ,CAAZ,IAAsBD,IAAtB;AACA,eAAOD,GAAP;AACH,KAPwC,EAOtC,EAPsC,CAAtB;AAAA,CAAnB;;AASA;;;;;;AAMA,IAAMG,WAAW,SAAXA,QAAW;AAAA,WAAWC,QAAQL,MAAR,CAAe,UAACC,GAAD,EAAMb,GAAN;AAAA,4CAAkBa,GAAlB,sBAA0Bb,GAA1B;AAAA,KAAf,EAA+C,EAA/C,CAAX;AAAA,CAAjB;;AAEA,IAAMkB,gBAAgB,SAAhBA,aAAgB,CAACC,EAAD,EAAKC,EAAL;AAAA,WAAY,CAC9BD,GAAG,CAAH,IAAQC,GAAG,CAAH,CADsB,EAE9BD,GAAG,CAAH,IAAQC,GAAG,CAAH,CAFsB,CAAZ;AAAA,CAAtB;;AAKA,IAAMC,QAAQ,SAARA,KAAQ,CAAC1B,IAAD,EAAO2B,SAAP,EAAkBC,OAAlB,EAA8B;AACxC,QAAMT,OAAOnB,KAAK2B,SAAL,CAAb;AACA3B,SAAK6B,MAAL,CAAYF,SAAZ,EAAuB,CAAvB;AACA3B,SAAK6B,MAAL,CAAYD,OAAZ,EAAqB,CAArB,EAAwBT,IAAxB;AACA,WAAOnB,IAAP;AACH,CALD;;AAOA,IAAM8B,eAAe,SAAfA,YAAe,CAACC,QAAD,EAAWjB,QAAX;AAAA,WACjBA,SAAS,CAAT,IAAc,CAAd,IAAmBA,SAAS,CAAT,KAAeiB,SAAS,CAAT,CAAlC,IACAjB,SAAS,CAAT,IAAc,CADd,IACmBA,SAAS,CAAT,KAAeiB,SAAS,CAAT,CAFjB;AAAA,CAArB;;AAKA,SAASC,WAAT,CAAqBC,KAArB,EAA4BvB,OAA5B,EAAqCU,GAArC,EAA0C;AACtC,QAAMX,QAAQI,WAAWO,GAAX,EAAgBV,OAAhB,CAAd;AACA,QAAIwB,MAAMzB,KAAN,CAAJ,EAAkB;AACd;AACH;AACD,WAAOwB,MAAMxB,KAAN,CAAP;AACH;;AAED,SAAS0B,WAAT,CAAqBC,GAArB,EAA0BH,KAA1B,EAAiCvB,OAAjC,EAA0CU,GAA1C,EAA+CiB,KAA/C,EAAsD;AAClD,QAAM5B,QAAQI,WAAWO,GAAX,EAAgBV,OAAhB,CAAd;AACA,QAAI,CAACwB,MAAMzB,KAAN,CAAL,EAAmB;AACfwB,cAAMxB,KAAN,IAAe4B,KAAf;AACH;AACD,WAAOD,GAAP;AACH;;AAED,SAASE,UAAT,CAAoBF,GAApB,EAAyB1B,OAAzB,EAAkC6B,IAAlC,EAAwCnB,GAAxC,EAA6CoB,IAA7C,EAAmD;AAC/CA,SAAKpC,OAAL,CAAa,UAACC,GAAD,EAAMoC,CAAN,EAAY;AACrB,YAAMC,YAAY,CAAC,CAAD,EAAID,IAAIrB,IAAI,CAAJ,CAAR,CAAlB;AACA,YAAIsB,UAAU,CAAV,KAAgBH,IAApB,EAA0B;AACtB;AACH;AACDlC,YAAID,OAAJ,CAAY,UAACe,IAAD,EAAOwB,CAAP,EAAa;AACrBD,sBAAU,CAAV,IAAeC,IAAIvB,IAAI,CAAJ,CAAnB;AACA,gBAAIsB,UAAU,CAAV,KAAgBhC,OAApB,EAA6B;AACzB;AACH;AACD0B,gBAAIQ,UAAJ,CAAeF,SAAf,EAA0BvB,IAA1B;AACH,SAND;AAOH,KAZD;AAaA,WAAOiB,GAAP;AACH;;AAED,SAASS,UAAT,CAAoBT,GAApB,EAAyB1B,OAAzB,EAAkC6B,IAAlC,EAAwCnB,GAAxC,EAA6C0B,IAA7C,EAAmD;AAC/C,QAAMC,MAAM,CACRpC,KAAKqC,GAAL,CAAS5B,IAAI,CAAJ,IAAS0B,KAAK,CAAL,CAAlB,EAA2BpC,OAA3B,CADQ,EAERC,KAAKqC,GAAL,CAAS5B,IAAI,CAAJ,IAAS0B,KAAK,CAAL,CAAlB,EAA2BP,IAA3B,CAFQ,CAAZ;AAIA,QAAMC,OAAO,EAAb;AACA,SAAK,IAAIC,IAAIrB,IAAI,CAAJ,CAAb,EAAqBqB,IAAIM,IAAI,CAAJ,CAAzB,EAAiCN,GAAjC,EAAsC;AAClC,YAAMQ,QAAQR,IAAIrB,IAAI,CAAJ,CAAlB;AACA,YAAI,CAACoB,KAAKS,KAAL,CAAL,EAAkB;AACdT,iBAAKS,KAAL,IAAc,EAAd;AACH;AACD,aAAK,IAAIN,IAAIvB,IAAI,CAAJ,CAAb,EAAqBuB,IAAII,IAAI,CAAJ,CAAzB,EAAiCJ,GAAjC,EAAsC;AAClC,gBAAMO,QAAQP,IAAIvB,IAAI,CAAJ,CAAlB;AACAoB,iBAAKS,KAAL,EAAYC,KAAZ,IAAqBd,IAAIe,UAAJ,CAAe,CAACR,CAAD,EAAIF,CAAJ,CAAf,CAArB;AACH;AACJ;AACD,WAAOD,IAAP;AACH;;AAED,SAASY,aAAT,CAAuB1C,OAAvB,EAAgCV,IAAhC,EAAsCqD,QAAtC,EAAgD;AAC5C,QAAM5C,QAAQT,KAAKsD,SAAL,CAAeD,QAAf,CAAd;AACA,WAAQ5C,SAAS,CAAV,GAAeD,WAAWC,KAAX,EAAkBC,OAAlB,CAAf,GAA4C6C,SAAnD;AACH;;AAED,SAASC,mBAAT,CAA6BpB,GAA7B,EAAkC1B,OAAlC,EAA2CU,GAA3C,EAAgD0B,IAAhD,EAAsDO,QAAtD,EAAgE;AAC5D,QAAMb,OAAOJ,IAAIqB,SAAJ,CAAcrC,GAAd,EAAmB0B,IAAnB,CAAb;AACA,QAAMY,OAAOrC,SAASmB,IAAT,CAAb;AACA,QAAMmB,YAAYD,KAAKJ,SAAL,CAAeD,QAAf,CAAlB;AACA,QAAIM,aAAa,CAAjB,EAAoB;AAChB,YAAMC,cAAcpB,KAAK,CAAL,EAAQjC,MAA5B;AACA,YAAMsD,YAAYrD,WAAWmD,SAAX,EAAsBC,WAAtB,CAAlB;AACA,eAAO,CACJxC,IAAI,CAAJ,IAASyC,UAAU,CAAV,CADL,EAEJzC,IAAI,CAAJ,IAASyC,UAAU,CAAV,CAFL,CAAP;AAIH;AACJ;;AAED,SAASC,gBAAT,CAA0BpD,OAA1B,EAAmC6B,IAAnC,EAAyCnB,GAAzC,EAA8CoB,IAA9C,EAAoD;AAChD,QAAMuB,mBAAmB3C,IAAI,CAAJ,IAASoB,KAAK,CAAL,EAAQjC,MAAjB,IAA2BG,OAApD;AACA,QAAMsD,iBAAiB5C,IAAI,CAAJ,IAASoB,KAAKjC,MAAd,IAAwBgC,IAA/C;AACA,WAAOwB,oBAAoBC,cAA3B;AACH;;AAED,SAASC,oBAAT,CAA8BvD,OAA9B,EAAuC6B,IAAvC,EAA6C2B,QAA7C,EAAuDC,SAAvD,EAAkE;AAC9D,QAAMzB,YAAYnB,cAAc2C,QAAd,EAAwBC,SAAxB,CAAlB;AACA,QAAIrC,aAAa,CAACpB,OAAD,EAAU6B,IAAV,CAAb,EAA8BG,SAA9B,CAAJ,EAA8C;AAC1C;AACH;AACD,WAAOA,SAAP;AACH;;AAED,SAAS0B,SAAT,CAAmBhC,GAAnB,EAAwBpC,IAAxB,EAA8BU,OAA9B,EAAuC6B,IAAvC,EAA6C8B,IAA7C,EAAmDC,EAAnD,EAAuD;AACnD,QAAM3C,YAAYd,WAAWwD,IAAX,EAAiB3D,OAAjB,CAAlB;AACA,QAAMoC,OAAO,CAACpC,OAAD,EAAU6B,IAAV,CAAb;AACA,QAAIL,MAAMP,SAAN,KAAoBG,aAAagB,IAAb,EAAmBuB,IAAnB,CAAxB,EAAkD;AAC9C,cAAM,IAAIlE,KAAJ,4DAAmEkE,IAAnE,OAAN;AACH;AACD,QAAMzC,UAAUf,WAAWyD,EAAX,EAAe5D,OAAf,CAAhB;AACA,QAAIwB,MAAMN,OAAN,KAAkBE,aAAagB,IAAb,EAAmBwB,EAAnB,CAAtB,EAA8C;AAC1C,cAAM,IAAInE,KAAJ,0DAAiEmE,EAAjE,OAAN;AACH;AACD5C,UAAM1B,IAAN,EAAY2B,SAAZ,EAAuBC,OAAvB;AACA,WAAOQ,GAAP;AACH;;AAED,SAASmC,QAAT,CAAkBC,KAAlB,EAAyBC,QAAzB,EAAmCC,KAAnC,EAA0CC,KAA1C,EAAiDC,GAAjD,EAAsD;AAClD,QAAID,QAAQ,CAAR,IAAaA,SAASD,KAA1B,EAAiC;AAC7B,cAAM,IAAIvE,KAAJ,0DAAiEwE,KAAjE,CAAN;AACH;AACD,QAAIC,MAAM,CAAN,IAAWA,OAAOF,KAAtB,EAA6B;AACzB,cAAM,IAAIvE,KAAJ,wDAA+DyE,GAA/D,CAAN;AACH;AACD,WAAOvD,SAASK,MAAM8C,KAAN,EAAaG,KAAb,EAAoBC,GAApB,CAAT,CAAP;AACH;;AAED,SAASC,WAAT,CAAqBC,IAArB,EAA2BpE,OAA3B,EAAoC6B,IAApC,EAA0CwC,KAA1C,EAAiDC,GAAjD,EAAsD;AAClD,QAAID,QAAQ,CAAR,IAAaA,SAASrE,OAA1B,EAAmC;AAC/B,cAAM,IAAIP,KAAJ,6DAAoE4E,KAApE,CAAN;AACH;AACD,QAAIC,MAAM,CAAN,IAAWA,OAAOtE,OAAtB,EAA+B;AAC3B,cAAM,IAAIP,KAAJ,2DAAkE6E,GAAlE,CAAN;AACH;AACD,QAAMC,UAAUH,KAAKI,GAAL,CAAS;AAAA,eAAOxD,MAAMrB,GAAN,EAAW0E,KAAX,EAAkBC,GAAlB,CAAP;AAAA,KAAT,CAAhB;AACA,WAAO3D,SAAS4D,OAAT,CAAP;AACH;;AAED,SAASE,SAAT,CAAmBL,IAAnB,EAAyBpE,OAAzB,EAAkC6B,IAAlC,EAAwClC,GAAxC,EAA6C+E,CAA7C,EAAgD;AAC5C,QAAIA,IAAI,CAAJ,IAASA,IAAI7C,IAAjB,EAAuB;AACnB,cAAM,IAAIpC,KAAJ,uDAA8DiF,CAA9D,CAAN;AACH;AACD,QAAI/E,IAAIE,MAAJ,KAAeG,OAAnB,EAA4B;AACxB,cAAM,IAAIP,KAAJ,8EACyEO,OADzE,iBAC4FL,IAAIE,MADhG,CAAN;AAGH;AACDuE,SAAKjD,MAAL,CAAYuD,CAAZ,EAAe,CAAf,EAAkB/E,GAAlB;AACA,WAAOyE,IAAP;AACH;;AAED,SAASO,YAAT,CAAsBP,IAAtB,EAA4BpE,OAA5B,EAAqC6B,IAArC,EAA2C+C,MAA3C,EAAmDC,CAAnD,EAAsD;AAClD,QAAIA,IAAI,CAAJ,IAASA,IAAI7E,OAAjB,EAA0B;AACtB,cAAM,IAAIP,KAAJ,0DAAiEoF,CAAjE,CAAN;AACH;AACD,QAAID,OAAO/E,MAAP,KAAkBgC,IAAtB,EAA4B;AACxB,cAAM,IAAIpC,KAAJ,iFAC4EoC,IAD5E,iBAC4F+C,OAAO/E,MADnG,CAAN;AAGH;AACD,WAAOuE,KAAKI,GAAL,CAAS,UAAC7E,GAAD,EAAMC,CAAN,EAAY;AACxBD,YAAIwB,MAAJ,CAAW0D,CAAX,EAAc,CAAd,EAAiBD,OAAOhF,CAAP,CAAjB;AACA,eAAOD,GAAP;AACH,KAHM,CAAP;AAIH;;AAED,SAASmF,YAAT,CAAsBV,IAAtB,EAA4BvC,IAA5B,EAAkC6C,CAAlC,EAAqC;AACjC,QAAIA,IAAI,CAAJ,IAASA,KAAK7C,IAAlB,EAAwB;AACpB,cAAM,IAAIpC,KAAJ,4DAAmEiF,CAAnE,CAAN;AACH;AACD,QAAI7C,QAAQ,CAAZ,EAAe;AACX,cAAM,IAAIpC,KAAJ,CAAU,6DAAV,CAAN;AACH;AACD2E,SAAKjD,MAAL,CAAYuD,CAAZ,EAAe,CAAf;AACA,WAAON,IAAP;AACH;;AAED,SAASW,eAAT,CAAyBX,IAAzB,EAA+BpE,OAA/B,EAAwC6E,CAAxC,EAA2C;AACvC,QAAIA,IAAI,CAAJ,IAASA,KAAK7E,OAAlB,EAA2B;AACvB,cAAM,IAAIP,KAAJ,+DAAsEoF,CAAtE,CAAN;AACH;AACD,QAAI7E,WAAW,CAAf,EAAkB;AACd,cAAM,IAAIP,KAAJ,CAAU,gEAAV,CAAN;AACH;AACD,WAAO2E,KAAKI,GAAL,CAAS;AAAA,eAAO7E,IAAIqF,MAAJ,CAAW,UAACC,CAAD,EAAIhD,CAAJ;AAAA,mBAAUA,MAAM4C,CAAhB;AAAA,SAAX,CAAP;AAAA,KAAT,CAAP;AACH;;AAED,SAASK,KAAT,CAAed,IAAf,EAAqBL,QAArB,EAA+BC,KAA/B,EAAsC5D,QAAtC,EAAgDgC,IAAhD,EAAsD;AAClD,QAAIhC,SAAS,CAAT,IAAc,CAAd,IAAmBA,SAAS,CAAT,KAAe2D,QAAlC,IAA8C3D,SAAS,CAAT,IAAc,CAA5D,IAAiEA,SAAS,CAAT,KAAe4D,KAApF,EAA2F;AACvF,cAAM,IAAIvE,KAAJ,yDAAgEW,QAAhE,CAAN;AACH;AACD,QAAM+E,WAAWtE,cAAcT,QAAd,EAAwBgC,IAAxB,CAAjB;AACA,WAAOgC,KACFY,MADE,CACK,UAACrF,GAAD,EAAMoC,CAAN;AAAA,eAAYA,KAAK3B,SAAS,CAAT,CAAL,IAAoB2B,IAAIoD,SAAS,CAAT,CAApC;AAAA,KADL,EAEFX,GAFE,CAEE;AAAA,eAAO7E,IAAIqF,MAAJ,CAAW,UAACvE,IAAD,EAAOwB,CAAP;AAAA,mBAAaA,KAAK7B,SAAS,CAAT,CAAL,IAAoB6B,IAAIkD,SAAS,CAAT,CAArC;AAAA,SAAX,CAAP;AAAA,KAFF,CAAP;AAGH;;AAED,IAAMC,QAAQ,SAARA,KAAQ,CAACC,GAAD,EAAMC,EAAN,EAAUC,EAAV,EAAiB;AAC3B,QAAMC,MAAMH,IAAIC,EAAJ,CAAZ;AACAD,QAAIC,EAAJ,IAAUD,IAAIE,EAAJ,CAAV;AACAF,QAAIE,EAAJ,IAAUC,GAAV;AACH,CAJD;;AAMA,SAASC,UAAT,CAAoB/D,GAApB,EAAyBgE,IAAzB,EAA+BC,IAA/B,EAAqC;AACjC,QAAMvD,OAAOV,IAAIU,IAAJ,EAAb;AACA,QAAIhB,aAAagB,IAAb,EAAmBsD,IAAnB,KAA4BtE,aAAagB,IAAb,EAAmBuD,IAAnB,CAAhC,EAA0D;AACtD,cAAM,IAAIlG,KAAJ,CAAU,gDAAV,CAAN;AACH;AACD,QAAM+F,MAAM9D,IAAIe,UAAJ,CAAeiD,IAAf,CAAZ;AACAhE,QAAIQ,UAAJ,CAAewD,IAAf,EAAqBhE,IAAIe,UAAJ,CAAekD,IAAf,CAArB;AACAjE,QAAIQ,UAAJ,CAAeyD,IAAf,EAAqBH,GAArB;AACA,WAAO9D,GAAP;AACH;;AAED,SAASkE,SAAT,CAAmBxB,IAAnB,EAAyBvC,IAAzB,EAA+BgE,EAA/B,EAAmCC,EAAnC,EAAuC;AACnC,QAAID,KAAK,CAAL,IAAUA,MAAMhE,IAApB,EAA0B;AACtB,cAAM,IAAIpC,KAAJ,2DAAkEoG,EAAlE,CAAN;AACH;AACD,QAAIC,KAAK,CAAL,IAAUA,MAAMjE,IAApB,EAA0B;AACtB,cAAM,IAAIpC,KAAJ,yDAAgEqG,EAAhE,CAAN;AACH;AACDV,UAAMhB,IAAN,EAAYyB,EAAZ,EAAgBC,EAAhB;AACA,WAAOnF,SAASyD,IAAT,CAAP;AACH;;AAED,SAAS2B,YAAT,CAAsB3B,IAAtB,EAA4BpE,OAA5B,EAAqCgG,EAArC,EAAyCC,EAAzC,EAA6C;AACzC,QAAID,KAAK,CAAL,IAAUA,MAAMhG,OAApB,EAA6B;AACzB,cAAM,IAAIP,KAAJ,8DAAqEuG,EAArE,CAAN;AACH;AACD,QAAIC,KAAK,CAAL,IAAUA,MAAMjG,OAApB,EAA6B;AACzB,cAAM,IAAIP,KAAJ,4DAAmEwG,EAAnE,CAAN;AACH;AACD7B,SAAKI,GAAL,CAAS,eAAO;AACZY,cAAMzF,GAAN,EAAWqG,EAAX,EAAeC,EAAf;AACA,eAAOtG,GAAP;AACH,KAHD;AAIA,WAAOgB,SAASyD,IAAT,CAAP;AACH;;AAED;;;;;;AAMA,SAAS8B,KAAT,CAAe5G,IAAf,EAAqB;;AAEjBD,sBAAkBC,IAAlB;;AAEA,QAAI0E,QAAQ1E,KAAKO,MAAjB;AACA,QAAIkE,WAAWzE,KAAK,CAAL,EAAQO,MAAvB;AACA,QAAI0B,QAAQZ,SAASrB,IAAT,CAAZ;;AAEA,QAAMoC,MAAM,EAAZ;;AAEA;AACAA,QAAI1B,OAAJ,GAAc;AAAA,eAAM+D,QAAN;AAAA,KAAd;AACArC,QAAIG,IAAJ,GAAW;AAAA,eAAMmC,KAAN;AAAA,KAAX;AACAtC,QAAIU,IAAJ,GAAW;AAAA,eAAM,CAAC2B,QAAD,EAAWC,KAAX,CAAN;AAAA,KAAX;;AAEA;AACAtC,QAAIe,UAAJ,GAAiB;AAAA,eAAOnB,YAAYC,KAAZ,EAAmBwC,QAAnB,EAA6BrD,GAA7B,CAAP;AAAA,KAAjB,CAhBiB,CAgBmG;AACpHgB,QAAIQ,UAAJ,GAAiB,UAACxB,GAAD,EAAMiB,KAAN;AAAA,eAAgBF,YAAYC,GAAZ,EAAiBH,KAAjB,EAAwBwC,QAAxB,EAAkCrD,GAAlC,EAAuCiB,KAAvC,CAAhB;AAAA,KAAjB,CAjBiB,CAiBmG;AACpHD,QAAIyE,gBAAJ,GAAuB,UAACzF,GAAD,EAAM+C,SAAN;AAAA,eAAoB/B,IAAIe,UAAJ,CAAef,IAAI0E,mBAAJ,CAAwB1F,GAAxB,EAA6B+C,SAA7B,CAAf,CAApB;AAAA,KAAvB,CAlBiB,CAkBmG;AACpH/B,QAAI0E,mBAAJ,GAA0B,UAAC1F,GAAD,EAAM+C,SAAN;AAAA,eAAoBF,qBAAqBQ,QAArB,EAA+BC,KAA/B,EAAsCtD,GAAtC,EAA2C+C,SAA3C,CAApB;AAAA,KAA1B,CAnBiB,CAmBmG;;AAEpH;AACA/B,QAAI2E,QAAJ,GAAe,UAAC1C,IAAD,EAAOC,EAAP;AAAA,eAAcF,UAAUhC,GAAV,EAAeH,KAAf,EAAsBwC,QAAtB,EAAgCC,KAAhC,EAAuCL,IAAvC,EAA6CC,EAA7C,CAAd;AAAA,KAAf;AACAlC,QAAI4E,YAAJ,GAAmB,UAAClG,QAAD,EAAWqD,SAAX;AAAA,eAAyB/B,IAAI2E,QAAJ,CAAajG,QAAb,EAAuBS,cAAcT,QAAd,EAAwBqD,SAAxB,CAAvB,CAAzB;AAAA,KAAnB;AACA/B,QAAI6E,OAAJ,GAAc,UAACtC,KAAD,EAAQC,GAAR,EAAgB;AAC1B3C,gBAAQsC,SAASnC,IAAI8E,OAAJ,EAAT,EAAwBzC,QAAxB,EAAkCC,KAAlC,EAAyCC,KAAzC,EAAgDC,GAAhD,CAAR;AACA,eAAOxC,GAAP;AACH,KAHD;AAIAA,QAAI+E,UAAJ,GAAiB,UAACpC,KAAD,EAAQC,GAAR,EAAgB;AAC7B/C,gBAAQ4C,YAAYzC,IAAI8E,OAAJ,EAAZ,EAA2BzC,QAA3B,EAAqCC,KAArC,EAA4CK,KAA5C,EAAmDC,GAAnD,CAAR;AACA,eAAO5C,GAAP;AACH,KAHD;;AAKA;AACAA,QAAIgF,QAAJ,GAAe,UAAC/G,GAAD,EAAM+E,CAAN,EAAY;AACvB,YAAMN,OAAOK,UAAU/C,IAAI8E,OAAJ,EAAV,EAAyBzC,QAAzB,EAAmCC,KAAnC,EAA0CrE,GAA1C,EAA+C+E,CAA/C,CAAb;AACAnD,gBAAQZ,SAASyD,IAAT,CAAR;AACAJ,gBAAQI,KAAKvE,MAAb;AACA,eAAO6B,GAAP;AACH,KALD;AAMAA,QAAIiF,WAAJ,GAAkB,UAAC/B,MAAD,EAASC,CAAT,EAAe;AAC7B,YAAMT,OAAOO,aAAajD,IAAI8E,OAAJ,EAAb,EAA4BzC,QAA5B,EAAsCC,KAAtC,EAA6CY,MAA7C,EAAqDC,CAArD,CAAb;AACAtD,gBAAQZ,SAASyD,IAAT,CAAR;AACAL,mBAAWK,KAAK,CAAL,EAAQvE,MAAnB;AACA,eAAO6B,GAAP;AACH,KALD;AAMAA,QAAIkF,WAAJ,GAAkB,aAAK;AACnB,YAAMxC,OAAOU,aAAapD,IAAI8E,OAAJ,EAAb,EAA4BxC,KAA5B,EAAmCU,CAAnC,CAAb;AACAnD,gBAAQZ,SAASyD,IAAT,CAAR;AACAJ,gBAAQI,KAAKvE,MAAb;AACA,eAAO6B,GAAP;AACH,KALD;AAMAA,QAAImF,cAAJ,GAAqB,aAAK;AACtB,YAAMzC,OAAOW,gBAAgBrD,IAAI8E,OAAJ,EAAhB,EAA+BzC,QAA/B,EAAyCc,CAAzC,CAAb;AACAtD,gBAAQZ,SAASyD,IAAT,CAAR;AACAL,mBAAWK,KAAK,CAAL,EAAQvE,MAAnB;AACA,eAAO6B,GAAP;AACH,KALD;;AAOA;AACAA,QAAIoF,IAAJ,GAAW,UAAC1G,QAAD,EAAWgC,IAAX,EAAoB;AAC3B,YAAMgC,OAAOc,MAAMxD,IAAI8E,OAAJ,EAAN,EAAqBzC,QAArB,EAA+BC,KAA/B,EAAsC5D,QAAtC,EAAgDgC,IAAhD,CAAb;AACAb,gBAAQZ,SAASyD,IAAT,CAAR;AACAJ,gBAAQI,KAAKvE,MAAb;AACAkE,mBAAWK,KAAK,CAAL,EAAQvE,MAAnB;AACA,eAAO6B,GAAP;AACH,KAND;;AAQA;AACAA,QAAIqF,SAAJ,GAAgB,UAACrB,IAAD,EAAOC,IAAP;AAAA,eAAgBF,WAAW/D,GAAX,EAAgBgE,IAAhB,EAAsBC,IAAtB,CAAhB;AAAA,KAAhB;AACAjE,QAAIsF,QAAJ,GAAe,UAACnB,EAAD,EAAKC,EAAL,EAAY;AACvBvE,gBAAQqE,UAAUlE,IAAI8E,OAAJ,EAAV,EAAyBxC,KAAzB,EAAgC6B,EAAhC,EAAoCC,EAApC,CAAR;AACA,eAAOpE,GAAP;AACH,KAHD;AAIAA,QAAIuF,WAAJ,GAAkB,UAACjB,EAAD,EAAKC,EAAL,EAAY;AAC1B1E,gBAAQwE,aAAarE,IAAI8E,OAAJ,EAAb,EAA4BzC,QAA5B,EAAsCiC,EAAtC,EAA0CC,EAA1C,CAAR;AACA,eAAOvE,GAAP;AACH,KAHD;;AAKA;AACAA,QAAIwF,SAAJ,GAAgB,UAACxG,GAAD,EAAMoB,IAAN;AAAA,eAAeF,WAAWF,GAAX,EAAgBqC,QAAhB,EAA0BC,KAA1B,EAAiCtD,GAAjC,EAAsCoB,IAAtC,CAAf;AAAA,KAAhB;AACAJ,QAAIqB,SAAJ,GAAgB,UAACrC,GAAD,EAAM0B,IAAN;AAAA,eAAeD,WAAWT,GAAX,EAAgBqC,QAAhB,EAA0BC,KAA1B,EAAiCtD,GAAjC,EAAsC0B,IAAtC,CAAf;AAAA,KAAhB;AACAV,QAAIyF,eAAJ,GAAsB,UAACzG,GAAD,EAAMoB,IAAN;AAAA,eAAesB,iBAAiBW,QAAjB,EAA2BC,KAA3B,EAAkCtD,GAAlC,EAAuCoB,IAAvC,CAAf;AAAA,KAAtB;;AAEA;AACAJ,QAAI0F,YAAJ,GAAmB;AAAA,eAAY1E,cAAcqB,QAAd,EAAwBxC,KAAxB,EAA+BoB,QAA/B,CAAZ;AAAA,KAAnB;AACAjB,QAAI2F,kBAAJ,GAAyB,UAAC3G,GAAD,EAAM0B,IAAN,EAAYO,QAAZ;AAAA,eAAyBG,oBAAoBpB,GAApB,EAAyBqC,QAAzB,EAAmCrD,GAAnC,EAAwC0B,IAAxC,EAA8CO,QAA9C,CAAzB;AAAA,KAAzB;;AAEA;AACAjB,QAAI8E,OAAJ,GAAc;AAAA,eAAMnG,WAAWkB,KAAX,EAAkBwC,QAAlB,CAAN;AAAA,KAAd;;AAEA,WAAOrC,GAAP;AAEH;;AAEDwE,MAAMoB,UAAN,GAAmBC,OAAOC,MAAP,CAAc;AAC7BC,SAAc,CAAE,CAAF,EAAK,CAAC,CAAN,CADe;AAE7BC,eAAc,CAAE,CAAF,EAAK,CAAC,CAAN,CAFe;AAG7BC,WAAc,CAAE,CAAF,EAAM,CAAN,CAHe;AAI7BC,kBAAc,CAAE,CAAF,EAAM,CAAN,CAJe;AAK7BC,YAAc,CAAE,CAAF,EAAM,CAAN,CALe;AAM7BC,iBAAc,CAAC,CAAC,CAAF,EAAM,CAAN,CANe;AAO7BC,UAAc,CAAC,CAAC,CAAF,EAAM,CAAN,CAPe;AAQ7BC,cAAc,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN;AARe,CAAd,CAAnB;;AAWA9B,MAAM+B,YAAN,GAAqB,UAACjI,OAAD,EAAU6B,IAAV,EAAgBc,QAAhB,EAA6B;AAC9C,QAAMuF,gBAAgBC,SAASnI,OAAT,CAAtB;AACA,QAAMoI,aAAaD,SAAStG,IAAT,CAAnB;AACA,QAAIqG,gBAAgB,CAAhB,IAAqB1G,MAAM0G,aAAN,CAAzB,EAA+C;AAC3C,cAAM,IAAIzI,KAAJ,sDAA6DO,OAA7D,CAAN;AACH;AACD,QAAIoI,aAAa,CAAb,IAAkB5G,MAAM4G,UAAN,CAAtB,EAAyC;AACrC,cAAM,IAAI3I,KAAJ,mDAA0DoC,IAA1D,CAAN;AACH;AACD,WAAOtC,MAAMoE,IAAN,CAAW,EAAE9D,QAAQuI,UAAV,EAAX,EAAmC,UAACC,EAAD,EAAK1I,GAAL;AAAA,eACtCJ,MAAMoE,IAAN,CAAW,EAAE9D,QAAQqI,aAAV,EAAX,EAAsC,UAACI,EAAD,EAAK1D,MAAL;AAAA,mBAClCjC,SAAS,EAAEiC,cAAF,EAAUjF,QAAV,EAAT,CADkC;AAAA,SAAtC,CADsC;AAAA,KAAnC,CAAP;AAKH,CAdD;;AAgBAuG,MAAMqC,QAAN,GAAiB,UAACvI,OAAD,EAAU6B,IAAV,EAAgBc,QAAhB;AAAA,WAA6BuD,MAAMA,MAAM+B,YAAN,CAAmBjI,OAAnB,EAA4B6B,IAA5B,EAAkCc,QAAlC,CAAN,CAA7B;AAAA,CAAjB;;kBAEeuD,K","file":"gridl.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"gridl\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"gridl\"] = factory();\n\telse\n\t\troot[\"gridl\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c84d82565ea6cb452c0e","function _isValidGridArray(data) {\n    if (!Array.isArray(data)) {\n        throw new Error('Trying to import data that is not an array.');\n    }\n    data.forEach((row, i) => {\n        if (!Array.isArray(row)) {\n            throw new Error('Trying to import data that is not an array.');\n        }\n        if (i > 0 && data[i - 1].length !== row.length) {\n            throw new Error('Trying to import data with different row lengths.');\n        }\n        if (row.length < 1) {\n            throw new Error('Trying to import grid without any columns. You need to provide at least one column.');\n        }\n    });\n}\n\n/**\n * Converts cell index into a cell position.\n *\n * @param {Integer} index - The index of the cell.\n * @param {Integer} columns - The number of columns the grid has.\n * @returns {Array} - The equivalent position within the grid as [x, y].\n */\nconst _index2pos = (index, columns) => [index % columns, Math.floor(index / columns)];\n\n/**\n * Converts a position into cell index.\n *\n * @param {Array} position - The two dimensional position array as [x, y].\n * @param {Integer} columns - The number of columns the grid has.\n * @returns {Integer} - The equivalent index within the grid.\n */\nconst _pos2index = (position, columns) => position && position[0] + position[1] * columns;\n\n/**\n * Converts an one-dimensional grid array into a two-dimensional grid.\n *\n * @param {Array} array1D - The one dimensional array.\n * @param {Integer} columns - The number columns the new array should have.\n * @returns {Array} - The two-dimensional array.\n */\nconst _toArray2D = (array1D, columns) => array1D.reduce((res, cell, index) => {\n    const pos = _index2pos(index, columns);\n    if (!res[pos[1]]) {\n        res[pos[1]] = [];\n    }\n    res[pos[1]][pos[0]] = cell;\n    return res;\n}, []);\n\n/**\n * Convert a two-dimensional array into a one-dimensional array.\n *\n * @param {Array} array2D - The two dimensional array to convert.\n * @returns {Array} - The flattened one-dimensional array.\n */\nconst _flatten = array2D => array2D.reduce((res, row) => [...res, ...row], []);\n\nconst _addPositions = (p1, p2) => [\n    p1[0] + p2[0],\n    p1[1] + p2[1],\n];\n\nconst _move = (data, fromIndex, toIndex) => {\n    const cell = data[fromIndex];\n    data.splice(fromIndex, 1);\n    data.splice(toIndex, 0, cell);\n    return data;\n};\n\nconst _isNotInArea = (areaSize, position) => (\n    position[0] < 0 || position[0] >= areaSize[0] ||\n    position[1] < 0 || position[1] >= areaSize[1]\n);\n\nfunction _getValueAt(_data, columns, pos) {\n    const index = _pos2index(pos, columns);\n    if (isNaN(index)) {\n        return;\n    }\n    return _data[index];\n}\n\nfunction _setValueAt(api, _data, columns, pos, value) {\n    const index = _pos2index(pos, columns);\n    if (!isNaN(index)) {\n        _data[index] = value;\n    }\n    return api;\n}\n\nfunction _setAreaAt(api, columns, rows, pos, area) {\n    area.forEach((row, r) => {\n        const targetPos = [0, r + pos[1]];\n        if (targetPos[1] >= rows) {\n            return;\n        }\n        row.forEach((cell, c) => {\n            targetPos[0] = c + pos[0];\n            if (targetPos[0] >= columns) {\n                return;\n            }\n            api.setValueAt(targetPos, cell);\n        });\n    });\n    return api;\n}\n\nfunction _getAreaAt(api, columns, rows, pos, size) {\n    const end = [\n        Math.min(pos[0] + size[0], columns),\n        Math.min(pos[1] + size[1], rows),\n    ];\n    const area = [];\n    for (let r = pos[1]; r < end[1]; r++) {\n        const rArea = r - pos[1];\n        if (!area[rArea]) {\n            area[rArea] = [];\n        }\n        for (let c = pos[0]; c < end[0]; c++) {\n            const cArea = c - pos[0];\n            area[rArea][cArea] = api.getValueAt([c, r]);\n        }\n    }\n    return area;\n}\n\nfunction _findPosition(columns, data, callback) {\n    const index = data.findIndex(callback);\n    return (index >= 0) ? _index2pos(index, columns) : undefined;\n}\n\nfunction _findPositionInArea(api, columns, pos, size, callback) {\n    const area = api.getAreaAt(pos, size);\n    const flat = _flatten(area);\n    const areaIndex = flat.findIndex(callback);\n    if (areaIndex >= 0) {\n        const areaColumns = area[0].length;\n        const posInArea = _index2pos(areaIndex, areaColumns);\n        return [\n           pos[0] + posInArea[0],\n           pos[1] + posInArea[1],\n        ];\n    }\n}\n\nfunction _checkAreaFitsAt(columns, rows, pos, area) {\n    const fitsHorizontally = pos[0] + area[0].length <= columns;\n    const fitsVertically = pos[1] + area.length <= rows;\n    return fitsHorizontally && fitsVertically;\n}\n\nfunction _getRelativePosition(columns, rows, startPos, direction) {\n    const targetPos = _addPositions(startPos, direction);\n    if (_isNotInArea([columns, rows], targetPos)) {\n        return;\n    }\n    return targetPos;\n}\n\nfunction _moveCell(api, data, columns, rows, from, to) {\n    const fromIndex = _pos2index(from, columns);\n    const size = [columns, rows];\n    if (isNaN(fromIndex) || _isNotInArea(size, from)) {\n        throw new Error(`Trying to move cell from an invalid position. Given: [${from}]`);\n    }\n    const toIndex = _pos2index(to, columns);\n    if (isNaN(toIndex) || _isNotInArea(size, to)) {\n        throw new Error(`Trying to move cell to an invalid position. Given: [${to}]`);\n    }\n    _move(data, fromIndex, toIndex);\n    return api;\n}\n\nfunction _moveRow(_grid, _columns, _rows, yFrom, yTo) {\n    if (yFrom < 0 || yFrom >= _rows) {\n        throw new Error(`Trying to move row from an invalid position. Given: ${yFrom}`);\n    }\n    if (yTo < 0 || yTo >= _rows) {\n        throw new Error(`Trying to move row to an invalid position. Given: ${yTo}`);\n    }\n    return _flatten(_move(_grid, yFrom, yTo));\n}\n\nfunction _moveColumn(grid, columns, rows, xFrom, xTo) {\n    if (xFrom < 0 || xFrom >= columns) {\n        throw new Error(`Trying to move column from an invalid position. Given: ${xFrom}`);\n    }\n    if (xTo < 0 || xTo >= columns) {\n        throw new Error(`Trying to move column to an invalid position. Given: ${xTo}`);\n    }\n    const newGrid = grid.map(row => _move(row, xFrom, xTo));\n    return _flatten(newGrid);\n}\n\nfunction _addRowAt(grid, columns, rows, row, y) {\n    if (y < 0 || y > rows) {\n        throw new Error(`Trying to add row at an invalid position. Given: ${y}`);\n    }\n    if (row.length !== columns) {\n        throw new Error(\n            `Trying to add a row that contains an invalid amount of cells. Expected: ${columns}, Given: ${row.length}`\n        );\n    }\n    grid.splice(y, 0, row);\n    return grid;\n}\n\nfunction _addColumnAt(grid, columns, rows, column, x) {\n    if (x < 0 || x > columns) {\n        throw new Error(`Trying to add column at an invalid position. Given: ${x}`);\n    }\n    if (column.length !== rows) {\n        throw new Error(\n            `Trying to add a column that contains an invalid amount of cells. Expected: ${rows}, Given: ${column.length}`\n        );\n    }\n    return grid.map((row, i) => {\n        row.splice(x, 0, column[i]);\n        return row;\n    });\n}\n\nfunction _removeRowAt(grid, rows, y) {\n    if (y < 0 || y >= rows) {\n        throw new Error(`Trying to remove a row at an invalid position. Given: ${y}`);\n    }\n    if (rows <= 1) {\n        throw new Error('Cannot remove row because the grid would be empty after it.');\n    }\n    grid.splice(y, 1);\n    return grid;\n}\n\nfunction _removeColumnAt(grid, columns, x) {\n    if (x < 0 || x >= columns) {\n        throw new Error(`Trying to remove a column at an invalid position. Given: ${x}`);\n    }\n    if (columns <= 1) {\n        throw new Error('Cannot remove column because the grid would be empty after it.');\n    }\n    return grid.map(row => row.filter((v, c) => c !== x));\n}\n\nfunction _clip(grid, _columns, _rows, position, size) {\n    if (position[0] < 0 || position[0] >= _columns || position[1] < 0 || position[1] >= _rows) {\n        throw new Error(`Trying to clip data at an invalid position. Given: ${position}`);\n    }\n    const endPoint = _addPositions(position, size);\n    return grid\n        .filter((row, r) => r >= position[1] && r < endPoint[1])\n        .map(row => row.filter((cell, c) => c >= position[0] && c < endPoint[0]));\n}\n\nconst _swap = (arr, i1, i2) => {\n    const tmp = arr[i1];\n    arr[i1] = arr[i2];\n    arr[i2] = tmp;\n};\n\nfunction _swapCells(api, pos1, pos2) {\n    const size = api.size();\n    if (_isNotInArea(size, pos1) || _isNotInArea(size, pos2)) {\n        throw new Error('Trying to swap cells with an invalid position.');\n    }\n    const tmp = api.getValueAt(pos1);\n    api.setValueAt(pos1, api.getValueAt(pos2));\n    api.setValueAt(pos2, tmp);\n    return api;\n}\n\nfunction _swapRows(grid, rows, y1, y2) {\n    if (y1 < 0 || y1 >= rows) {\n        throw new Error(`Trying to swap rows from an invalid position. Given: ${y1}`);\n    }\n    if (y2 < 0 || y2 >= rows) {\n        throw new Error(`Trying to swap rows to an invalid position. Given: ${y2}`);\n    }\n    _swap(grid, y1, y2);\n    return _flatten(grid);\n}\n\nfunction _swapColumns(grid, columns, x1, x2) {\n    if (x1 < 0 || x1 >= columns) {\n        throw new Error(`Trying to swap columns from an invalid position. Given: ${x1}`);\n    }\n    if (x2 < 0 || x2 >= columns) {\n        throw new Error(`Trying to swap columns to an invalid position. Given: ${x2}`);\n    }\n    grid.map(row => {\n        _swap(row, x1, x2);\n        return row;\n    });\n    return _flatten(grid);\n}\n\n/**\n * The gridl base function.\n *\n * @param {Array} data\n * @returns {{ toArray1D, toArray2D, index2pos, pos2index, rows, columns }}\n */\nfunction gridl(data) {\n\n    _isValidGridArray(data);\n\n    let _rows = data.length;\n    let _columns = data[0].length;\n    let _data = _flatten(data);\n\n    const api = {};\n\n    // getter for dimensions\n    api.columns = () => _columns;\n    api.rows = () => _rows;\n    api.size = () => [_columns, _rows];\n\n    // single value operations\n    api.getValueAt = pos => _getValueAt(_data, _columns, pos);                                                          // TODO: merge with getRelativeValue\n    api.setValueAt = (pos, value) => _setValueAt(api, _data, _columns, pos, value);                                     // TODO: provide optional relative offset (direction)\n    api.getRelativeValue = (pos, direction) => api.getValueAt(api.getRelativePosition(pos, direction));                 // TODO: merge this functionality into getValueAt() with an optional parameter \"direction\" that defaults to [0,0]\n    api.getRelativePosition = (pos, direction) => _getRelativePosition(_columns, _rows, pos, direction);                // TODO: rename to \"getPositionFrom\"\n\n    // moving cells\n    api.moveCell = (from, to) => _moveCell(api, _data, _columns, _rows, from, to);\n    api.moveCellFrom = (position, direction) => api.moveCell(position, _addPositions(position, direction));\n    api.moveRow = (yFrom, yTo) => {\n        _data = _moveRow(api.getData(), _columns, _rows, yFrom, yTo);\n        return api;\n    };\n    api.moveColumn = (xFrom, xTo) => {\n        _data = _moveColumn(api.getData(), _columns, _rows, xFrom, xTo);\n        return api;\n    };\n\n    // adding columns and rows\n    api.addRowAt = (row, y) => {\n        const grid = _addRowAt(api.getData(), _columns, _rows, row, y);\n        _data = _flatten(grid);\n        _rows = grid.length;\n        return api;\n    };\n    api.addColumnAt = (column, x) => {\n        const grid = _addColumnAt(api.getData(), _columns, _rows, column, x);\n        _data = _flatten(grid);\n        _columns = grid[0].length;\n        return api;\n    };\n    api.removeRowAt = y => {\n        const grid = _removeRowAt(api.getData(), _rows, y);\n        _data = _flatten(grid);\n        _rows = grid.length;\n        return api;\n    };\n    api.removeColumnAt = x => {\n        const grid = _removeColumnAt(api.getData(), _columns, x);\n        _data = _flatten(grid);\n        _columns = grid[0].length;\n        return api;\n    };\n\n    // clipping\n    api.clip = (position, size) => {\n        const grid = _clip(api.getData(), _columns, _rows, position, size);\n        _data = _flatten(grid);\n        _rows = grid.length;\n        _columns = grid[0].length;\n        return api;\n    };\n\n    // swapping\n    api.swapCells = (pos1, pos2) => _swapCells(api, pos1, pos2);\n    api.swapRows = (y1, y2) => {\n        _data = _swapRows(api.getData(), _rows, y1, y2);\n        return api;\n    };\n    api.swapColumns = (x1, x2) => {\n        _data = _swapColumns(api.getData(), _columns, x1, x2);\n        return api;\n    };\n\n    // area operations\n    api.setAreaAt = (pos, area) => _setAreaAt(api, _columns, _rows, pos, area);\n    api.getAreaAt = (pos, size) => _getAreaAt(api, _columns, _rows, pos, size);\n    api.checkAreaFitsAt = (pos, area) => _checkAreaFitsAt(_columns, _rows, pos, area);\n\n    // finding\n    api.findPosition = callback => _findPosition(_columns, _data, callback);\n    api.findPositionInArea = (pos, size, callback) => _findPositionInArea(api, _columns, pos, size, callback);\n\n    // exporting data\n    api.getData = () => _toArray2D(_data, _columns);\n\n    return api;\n\n}\n\ngridl.directions = Object.freeze({\n    TOP:          [ 0, -1],\n    TOP_RIGHT:    [ 1, -1],\n    RIGHT:        [ 1,  0],\n    BOTTOM_RIGHT: [ 1,  1],\n    BOTTOM:       [ 0,  1],\n    BOTTOM_LEFT:  [-1,  1],\n    LEFT:         [-1,  0],\n    TOP_LEFT:     [-1, -1],\n});\n\ngridl.generateData = (columns, rows, callback) => {\n    const parsedColumns = parseInt(columns);\n    const parsedRows = parseInt(rows);\n    if (parsedColumns < 1 || isNaN(parsedColumns)) {\n        throw new Error(`You need to specify at least one column. Given: ${columns}`);\n    }\n    if (parsedRows < 1 || isNaN(parsedRows)) {\n        throw new Error(`You need to specify at least one row. Given: ${rows}`);\n    }\n    return Array.from({ length: parsedRows }, (vr, row) => (\n        Array.from({ length: parsedColumns }, (vc, column) => (\n            callback({ column, row })\n        ))\n    ));\n};\n\ngridl.generate = (columns, rows, callback) => gridl(gridl.generateData(columns, rows, callback));\n\nexport default gridl;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}