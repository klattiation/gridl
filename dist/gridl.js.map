{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 1215a507327535bdac84","webpack:///./src/index.js"],"names":["_isValidGridArray","data","Array","isArray","Error","forEach","row","i","length","_index2pos","index","columns","Math","floor","_pos2index","position","_toArray2D","array1D","reduce","res","cell","pos","_flatten","array2D","_addPositions","p1","p2","_getValueAt","_data","isNaN","_setValueAt","api","value","_setAreaAt","rows","area","r","targetPos","c","setValueAt","_getAreaAt","size","end","min","rArea","cArea","getValueAt","_findPosition","callback","findIndex","undefined","_findPositionInArea","getAreaAt","flat","areaIndex","areaColumns","posInArea","_checkAreaFitsAt","fitsHorizontally","fitsVertically","_getRelativePosition","startPos","direction","_isNotInArea","_moveCell","from","to","fromIndex","toIndex","splice","areaSize","gridl","_rows","_columns","getRelativeValue","getRelativePosition","moveCell","moveCellFrom","setAreaAt","checkAreaFitsAt","findPosition","findPositionInArea","getData","directions","Object","freeze","TOP","TOP_RIGHT","RIGHT","BOTTOM_RIGHT","BOTTOM","BOTTOM_LEFT","LEFT","TOP_LEFT","generateData","parsedColumns","parseInt","parsedRows","vr","vc","column","generate"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;AC7DA,SAASA,iBAAT,CAA2BC,IAA3B,EAAiC;AAC7B,QAAI,CAACC,MAAMC,OAAN,CAAcF,IAAd,CAAL,EAA0B;AACtB,cAAM,IAAIG,KAAJ,CAAU,6CAAV,CAAN;AACH;AACDH,SAAKI,OAAL,CAAa,UAACC,GAAD,EAAMC,CAAN,EAAY;AACrB,YAAI,CAACL,MAAMC,OAAN,CAAcG,GAAd,CAAL,EAAyB;AACrB,kBAAM,IAAIF,KAAJ,CAAU,6CAAV,CAAN;AACH;AACD,YAAIG,IAAI,CAAJ,IAASN,KAAKM,IAAI,CAAT,EAAYC,MAAZ,KAAuBF,IAAIE,MAAxC,EAAgD;AAC5C,kBAAM,IAAIJ,KAAJ,CAAU,mDAAV,CAAN;AACH;AACD,YAAIE,IAAIE,MAAJ,GAAa,CAAjB,EAAoB;AAChB,kBAAM,IAAIJ,KAAJ,CAAU,qFAAV,CAAN;AACH;AACJ,KAVD;AAWH;;AAED;;;;;;;AAOA,IAAMK,aAAa,SAAbA,UAAa,CAACC,KAAD,EAAQC,OAAR;AAAA,WAAoB,CAACD,QAAQC,OAAT,EAAkBC,KAAKC,KAAL,CAAWH,QAAQC,OAAnB,CAAlB,CAApB;AAAA,CAAnB;;AAEA;;;;;;;AAOA,IAAMG,aAAa,SAAbA,UAAa,CAACC,QAAD,EAAWJ,OAAX;AAAA,WAAuBI,YAAYA,SAAS,CAAT,IAAcA,SAAS,CAAT,IAAcJ,OAA/D;AAAA,CAAnB;;AAEA;;;;;;;AAOA,IAAMK,aAAa,SAAbA,UAAa,CAACC,OAAD,EAAUN,OAAV;AAAA,WAAsBM,QAAQC,MAAR,CAAe,UAACC,GAAD,EAAMC,IAAN,EAAYV,KAAZ,EAAsB;AAC1E,YAAMW,MAAMZ,WAAWC,KAAX,EAAkBC,OAAlB,CAAZ;AACA,YAAI,CAACQ,IAAIE,IAAI,CAAJ,CAAJ,CAAL,EAAkB;AACdF,gBAAIE,IAAI,CAAJ,CAAJ,IAAc,EAAd;AACH;AACDF,YAAIE,IAAI,CAAJ,CAAJ,EAAYA,IAAI,CAAJ,CAAZ,IAAsBD,IAAtB;AACA,eAAOD,GAAP;AACH,KAPwC,EAOtC,EAPsC,CAAtB;AAAA,CAAnB;;AASA;;;;;;AAMA,IAAMG,WAAW,SAAXA,QAAW;AAAA,WAAWC,QAAQL,MAAR,CAAe,UAACC,GAAD,EAAMb,GAAN;AAAA,4CAAkBa,GAAlB,sBAA0Bb,GAA1B;AAAA,KAAf,EAA+C,EAA/C,CAAX;AAAA,CAAjB;;AAEA,IAAMkB,gBAAgB,SAAhBA,aAAgB,CAACC,EAAD,EAAKC,EAAL;AAAA,WAAY,CAC9BD,GAAG,CAAH,IAAQC,GAAG,CAAH,CADsB,EAE9BD,GAAG,CAAH,IAAQC,GAAG,CAAH,CAFsB,CAAZ;AAAA,CAAtB;;AAKA,SAASC,WAAT,CAAqBC,KAArB,EAA4BjB,OAA5B,EAAqCU,GAArC,EAA0C;AACtC,QAAMX,QAAQI,WAAWO,GAAX,EAAgBV,OAAhB,CAAd;AACA,QAAIkB,MAAMnB,KAAN,CAAJ,EAAkB;AACd;AACH;AACD,WAAOkB,MAAMlB,KAAN,CAAP;AACH;;AAED,SAASoB,WAAT,CAAqBC,GAArB,EAA0BH,KAA1B,EAAiCjB,OAAjC,EAA0CU,GAA1C,EAA+CW,KAA/C,EAAsD;AAClD,QAAMtB,QAAQI,WAAWO,GAAX,EAAgBV,OAAhB,CAAd;AACA,QAAI,CAACkB,MAAMnB,KAAN,CAAL,EAAmB;AACfkB,cAAMlB,KAAN,IAAesB,KAAf;AACH;AACD,WAAOD,GAAP;AACH;;AAED,SAASE,UAAT,CAAoBF,GAApB,EAAyBpB,OAAzB,EAAkCuB,IAAlC,EAAwCb,GAAxC,EAA6Cc,IAA7C,EAAmD;AAC/CA,SAAK9B,OAAL,CAAa,UAACC,GAAD,EAAM8B,CAAN,EAAY;AACrB,YAAMC,YAAY,CAAC,CAAD,EAAID,IAAIf,IAAI,CAAJ,CAAR,CAAlB;AACA,YAAIgB,UAAU,CAAV,KAAgBH,IAApB,EAA0B;AACtB;AACH;AACD5B,YAAID,OAAJ,CAAY,UAACe,IAAD,EAAOkB,CAAP,EAAa;AACrBD,sBAAU,CAAV,IAAeC,IAAIjB,IAAI,CAAJ,CAAnB;AACA,gBAAIgB,UAAU,CAAV,KAAgB1B,OAApB,EAA6B;AACzB;AACH;AACDoB,gBAAIQ,UAAJ,CAAeF,SAAf,EAA0BjB,IAA1B;AACH,SAND;AAOH,KAZD;AAaA,WAAOW,GAAP;AACH;;AAED,SAASS,UAAT,CAAoBT,GAApB,EAAyBpB,OAAzB,EAAkCuB,IAAlC,EAAwCb,GAAxC,EAA6CoB,IAA7C,EAAmD;AAC/C,QAAMC,MAAM,CACR9B,KAAK+B,GAAL,CAAStB,IAAI,CAAJ,IAASoB,KAAK,CAAL,CAAlB,EAA2B9B,OAA3B,CADQ,EAERC,KAAK+B,GAAL,CAAStB,IAAI,CAAJ,IAASoB,KAAK,CAAL,CAAlB,EAA2BP,IAA3B,CAFQ,CAAZ;AAIA,QAAMC,OAAO,EAAb;AACA,SAAK,IAAIC,IAAIf,IAAI,CAAJ,CAAb,EAAqBe,IAAIM,IAAI,CAAJ,CAAzB,EAAiCN,GAAjC,EAAsC;AAClC,YAAMQ,QAAQR,IAAIf,IAAI,CAAJ,CAAlB;AACA,YAAI,CAACc,KAAKS,KAAL,CAAL,EAAkB;AACdT,iBAAKS,KAAL,IAAc,EAAd;AACH;AACD,aAAK,IAAIN,IAAIjB,IAAI,CAAJ,CAAb,EAAqBiB,IAAII,IAAI,CAAJ,CAAzB,EAAiCJ,GAAjC,EAAsC;AAClC,gBAAMO,QAAQP,IAAIjB,IAAI,CAAJ,CAAlB;AACAc,iBAAKS,KAAL,EAAYC,KAAZ,IAAqBd,IAAIe,UAAJ,CAAe,CAACR,CAAD,EAAIF,CAAJ,CAAf,CAArB;AACH;AACJ;AACD,WAAOD,IAAP;AACH;;AAED,SAASY,aAAT,CAAuBpC,OAAvB,EAAgCV,IAAhC,EAAsC+C,QAAtC,EAAgD;AAC5C,QAAMtC,QAAQT,KAAKgD,SAAL,CAAeD,QAAf,CAAd;AACA,WAAQtC,SAAS,CAAV,GAAeD,WAAWC,KAAX,EAAkBC,OAAlB,CAAf,GAA4CuC,SAAnD;AACH;;AAED,SAASC,mBAAT,CAA6BpB,GAA7B,EAAkCpB,OAAlC,EAA2CU,GAA3C,EAAgDoB,IAAhD,EAAsDO,QAAtD,EAAgE;AAC5D,QAAMb,OAAOJ,IAAIqB,SAAJ,CAAc/B,GAAd,EAAmBoB,IAAnB,CAAb;AACA,QAAMY,OAAO/B,SAASa,IAAT,CAAb;AACA,QAAMmB,YAAYD,KAAKJ,SAAL,CAAeD,QAAf,CAAlB;AACA,QAAIM,aAAa,CAAjB,EAAoB;AAChB,YAAMC,cAAcpB,KAAK,CAAL,EAAQ3B,MAA5B;AACA,YAAMgD,YAAY/C,WAAW6C,SAAX,EAAsBC,WAAtB,CAAlB;AACA,eAAO,CACJlC,IAAI,CAAJ,IAASmC,UAAU,CAAV,CADL,EAEJnC,IAAI,CAAJ,IAASmC,UAAU,CAAV,CAFL,CAAP;AAIH;AACJ;;AAED,SAASC,gBAAT,CAA0B9C,OAA1B,EAAmCuB,IAAnC,EAAyCb,GAAzC,EAA8Cc,IAA9C,EAAoD;AAChD,QAAMuB,mBAAmBrC,IAAI,CAAJ,IAASc,KAAK,CAAL,EAAQ3B,MAAjB,IAA2BG,OAApD;AACA,QAAMgD,iBAAiBtC,IAAI,CAAJ,IAASc,KAAK3B,MAAd,IAAwB0B,IAA/C;AACA,WAAOwB,oBAAoBC,cAA3B;AACH;;AAED,SAASC,oBAAT,CAA8BjD,OAA9B,EAAuCuB,IAAvC,EAA6C2B,QAA7C,EAAuDC,SAAvD,EAAkE;AAC9D,QAAMzB,YAAYb,cAAcqC,QAAd,EAAwBC,SAAxB,CAAlB;AACA,QAAIC,aAAa,CAACpD,OAAD,EAAUuB,IAAV,CAAb,EAA8BG,SAA9B,CAAJ,EAA8C;AAC1C;AACH;AACD,WAAOA,SAAP;AACH;;AAED,SAAS2B,SAAT,CAAmBjC,GAAnB,EAAwB9B,IAAxB,EAA8BU,OAA9B,EAAuCuB,IAAvC,EAA6C+B,IAA7C,EAAmDC,EAAnD,EAAuD;AACnD,QAAMC,YAAYrD,WAAWmD,IAAX,EAAiBtD,OAAjB,CAAlB;AACA,QAAM8B,OAAO,CAAC9B,OAAD,EAAUuB,IAAV,CAAb;AACA,QAAIL,MAAMsC,SAAN,KAAoBJ,aAAatB,IAAb,EAAmBwB,IAAnB,CAAxB,EAAkD;AAC9C,cAAM,IAAI7D,KAAJ,4DAAmE6D,IAAnE,OAAN;AACH;AACD,QAAMG,UAAUtD,WAAWoD,EAAX,EAAevD,OAAf,CAAhB;AACA,QAAIkB,MAAMuC,OAAN,KAAkBL,aAAatB,IAAb,EAAmByB,EAAnB,CAAtB,EAA8C;AAC1C,cAAM,IAAI9D,KAAJ,0DAAiE8D,EAAjE,OAAN;AACH;AACD,QAAM9C,OAAOnB,KAAKkE,SAAL,CAAb;AACAlE,SAAKoE,MAAL,CAAYF,SAAZ,EAAuB,CAAvB;AACAlE,SAAKoE,MAAL,CAAYD,OAAZ,EAAqB,CAArB,EAAwBhD,IAAxB;AACA,WAAOW,GAAP;AACH;;AAED,IAAMgC,eAAe,SAAfA,YAAe,CAACO,QAAD,EAAWvD,QAAX;AAAA,WACjBA,SAAS,CAAT,IAAc,CAAd,IAAmBA,SAAS,CAAT,KAAeuD,SAAS,CAAT,CAAlC,IACAvD,SAAS,CAAT,IAAc,CADd,IACmBA,SAAS,CAAT,KAAeuD,SAAS,CAAT,CAFjB;AAAA,CAArB;;AAKA;;;;;;AAMA,SAASC,KAAT,CAAetE,IAAf,EAAqB;;AAEjBD,sBAAkBC,IAAlB;;AAEA,QAAMuE,QAAQvE,KAAKO,MAAnB;AACA,QAAMiE,WAAWxE,KAAK,CAAL,EAAQO,MAAzB;AACA,QAAMoB,QAAQN,SAASrB,IAAT,CAAd;;AAEA,QAAM8B,MAAM,EAAZ;;AAEA;AACAA,QAAIpB,OAAJ,GAAc;AAAA,eAAM8D,QAAN;AAAA,KAAd;AACA1C,QAAIG,IAAJ,GAAW;AAAA,eAAMsC,KAAN;AAAA,KAAX;AACAzC,QAAIU,IAAJ,GAAW;AAAA,eAAM,CAACgC,QAAD,EAAWD,KAAX,CAAN;AAAA,KAAX;;AAEA;AACAzC,QAAIe,UAAJ,GAAiB;AAAA,eAAOnB,YAAYC,KAAZ,EAAmB6C,QAAnB,EAA6BpD,GAA7B,CAAP;AAAA,KAAjB,CAhBiB,CAgBmG;AACpHU,QAAIQ,UAAJ,GAAiB,UAAClB,GAAD,EAAMW,KAAN;AAAA,eAAgBF,YAAYC,GAAZ,EAAiBH,KAAjB,EAAwB6C,QAAxB,EAAkCpD,GAAlC,EAAuCW,KAAvC,CAAhB;AAAA,KAAjB,CAjBiB,CAiBmG;AACpHD,QAAI2C,gBAAJ,GAAuB,UAACrD,GAAD,EAAMyC,SAAN;AAAA,eAAoB/B,IAAIe,UAAJ,CAAef,IAAI4C,mBAAJ,CAAwBtD,GAAxB,EAA6ByC,SAA7B,CAAf,CAApB;AAAA,KAAvB,CAlBiB,CAkBmG;AACpH/B,QAAI4C,mBAAJ,GAA0B,UAACtD,GAAD,EAAMyC,SAAN;AAAA,eAAoBF,qBAAqBa,QAArB,EAA+BD,KAA/B,EAAsCnD,GAAtC,EAA2CyC,SAA3C,CAApB;AAAA,KAA1B,CAnBiB,CAmBmG;;AAEpH;AACA/B,QAAI6C,QAAJ,GAAe,UAACX,IAAD,EAAOC,EAAP;AAAA,eAAcF,UAAUjC,GAAV,EAAeH,KAAf,EAAsB6C,QAAtB,EAAgCD,KAAhC,EAAuCP,IAAvC,EAA6CC,EAA7C,CAAd;AAAA,KAAf;AACAnC,QAAI8C,YAAJ,GAAmB,UAAC9D,QAAD,EAAW+C,SAAX;AAAA,eAAyB/B,IAAI6C,QAAJ,CAAa7D,QAAb,EAAuBS,cAAcT,QAAd,EAAwB+C,SAAxB,CAAvB,CAAzB;AAAA,KAAnB;;AAEA;AACA/B,QAAI+C,SAAJ,GAAgB,UAACzD,GAAD,EAAMc,IAAN;AAAA,eAAeF,WAAWF,GAAX,EAAgB0C,QAAhB,EAA0BD,KAA1B,EAAiCnD,GAAjC,EAAsCc,IAAtC,CAAf;AAAA,KAAhB;AACAJ,QAAIqB,SAAJ,GAAgB,UAAC/B,GAAD,EAAMoB,IAAN;AAAA,eAAeD,WAAWT,GAAX,EAAgB0C,QAAhB,EAA0BD,KAA1B,EAAiCnD,GAAjC,EAAsCoB,IAAtC,CAAf;AAAA,KAAhB;AACAV,QAAIgD,eAAJ,GAAsB,UAAC1D,GAAD,EAAMc,IAAN;AAAA,eAAesB,iBAAiBgB,QAAjB,EAA2BD,KAA3B,EAAkCnD,GAAlC,EAAuCc,IAAvC,CAAf;AAAA,KAAtB;;AAEA;AACAJ,QAAIiD,YAAJ,GAAmB;AAAA,eAAYjC,cAAc0B,QAAd,EAAwB7C,KAAxB,EAA+BoB,QAA/B,CAAZ;AAAA,KAAnB;AACAjB,QAAIkD,kBAAJ,GAAyB,UAAC5D,GAAD,EAAMoB,IAAN,EAAYO,QAAZ;AAAA,eAAyBG,oBAAoBpB,GAApB,EAAyB0C,QAAzB,EAAmCpD,GAAnC,EAAwCoB,IAAxC,EAA8CO,QAA9C,CAAzB;AAAA,KAAzB;;AAEA;AACAjB,QAAImD,OAAJ,GAAc;AAAA,eAAMlE,WAAWY,KAAX,EAAkB6C,QAAlB,CAAN;AAAA,KAAd;;AAEA,WAAO1C,GAAP;AAEH;;AAEDwC,MAAMY,UAAN,GAAmBC,OAAOC,MAAP,CAAc;AAC7BC,SAAc,CAAE,CAAF,EAAK,CAAC,CAAN,CADe;AAE7BC,eAAc,CAAE,CAAF,EAAK,CAAC,CAAN,CAFe;AAG7BC,WAAc,CAAE,CAAF,EAAM,CAAN,CAHe;AAI7BC,kBAAc,CAAE,CAAF,EAAM,CAAN,CAJe;AAK7BC,YAAc,CAAE,CAAF,EAAM,CAAN,CALe;AAM7BC,iBAAc,CAAC,CAAC,CAAF,EAAM,CAAN,CANe;AAO7BC,UAAc,CAAC,CAAC,CAAF,EAAM,CAAN,CAPe;AAQ7BC,cAAc,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN;AARe,CAAd,CAAnB;;AAWAtB,MAAMuB,YAAN,GAAqB,UAACnF,OAAD,EAAUuB,IAAV,EAAgBc,QAAhB,EAA6B;AAC9C,QAAM+C,gBAAgBC,SAASrF,OAAT,CAAtB;AACA,QAAMsF,aAAaD,SAAS9D,IAAT,CAAnB;AACA,QAAI6D,gBAAgB,CAAhB,IAAqBlE,MAAMkE,aAAN,CAAzB,EAA+C;AAC3C,cAAM,IAAI3F,KAAJ,sDAA6DO,OAA7D,CAAN;AACH;AACD,QAAIsF,aAAa,CAAb,IAAkBpE,MAAMoE,UAAN,CAAtB,EAAyC;AACrC,cAAM,IAAI7F,KAAJ,mDAA0D8B,IAA1D,CAAN;AACH;AACD,WAAOhC,MAAM+D,IAAN,CAAW,EAAEzD,QAAQyF,UAAV,EAAX,EAAmC,UAACC,EAAD,EAAK5F,GAAL,EAAa;AACnD,eAAOJ,MAAM+D,IAAN,CAAW,EAAEzD,QAAQuF,aAAV,EAAX,EAAsC,UAACI,EAAD,EAAKC,MAAL,EAAgB;AACzD,mBAAOpD,SAAS,EAAEoD,cAAF,EAAU9F,QAAV,EAAT,CAAP;AACH,SAFM,CAAP;AAGH,KAJM,CAAP;AAKH,CAdD;;AAgBAiE,MAAM8B,QAAN,GAAiB,UAAC1F,OAAD,EAAUuB,IAAV,EAAgBc,QAAhB;AAAA,WAA6BuB,MAAMA,MAAMuB,YAAN,CAAmBnF,OAAnB,EAA4BuB,IAA5B,EAAkCc,QAAlC,CAAN,CAA7B;AAAA,CAAjB;;kBAEeuB,K;;AAEf","file":"gridl.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"gridl\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"gridl\"] = factory();\n\telse\n\t\troot[\"gridl\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1215a507327535bdac84","function _isValidGridArray(data) {\n    if (!Array.isArray(data)) {\n        throw new Error('Trying to import data that is not an array.');\n    }\n    data.forEach((row, i) => {\n        if (!Array.isArray(row)) {\n            throw new Error('Trying to import data that is not an array.');\n        }\n        if (i > 0 && data[i - 1].length !== row.length) {\n            throw new Error('Trying to import data with different row lengths.');\n        }\n        if (row.length < 1) {\n            throw new Error('Trying to import grid without any columns. You need to provide at least one column.');\n        }\n    });\n}\n\n/**\n * Converts cell index into a cell position.\n *\n * @param {Integer} index - The index of the cell.\n * @param {Integer} columns - The number of columns the grid has.\n * @returns {Array} - The equivalent position within the grid as [x, y].\n */\nconst _index2pos = (index, columns) => [index % columns, Math.floor(index / columns)];\n\n/**\n * Converts a position into cell index.\n *\n * @param {Array} position - The two dimensional position array as [x, y].\n * @param {Integer} columns - The number of columns the grid has.\n * @returns {Integer} - The equivalent index within the grid.\n */\nconst _pos2index = (position, columns) => position && position[0] + position[1] * columns;\n\n/**\n * Converts an one-dimensional grid array into a two-dimensional grid.\n *\n * @param {Array} array1D - The one dimensional array.\n * @param {Integer} columns - The number columns the new array should have.\n * @returns {Array} - The two-dimensional array.\n */\nconst _toArray2D = (array1D, columns) => array1D.reduce((res, cell, index) => {\n    const pos = _index2pos(index, columns);\n    if (!res[pos[1]]) {\n        res[pos[1]] = [];\n    }\n    res[pos[1]][pos[0]] = cell;\n    return res;\n}, []);\n\n/**\n * Convert a two-dimensional array into a one-dimensional array.\n *\n * @param {Array} array2D - The two dimensional array to convert.\n * @returns {Array} - The flattened one-dimensional array.\n */\nconst _flatten = array2D => array2D.reduce((res, row) => [...res, ...row], []);\n\nconst _addPositions = (p1, p2) => [\n    p1[0] + p2[0],\n    p1[1] + p2[1],\n];\n\nfunction _getValueAt(_data, columns, pos) {\n    const index = _pos2index(pos, columns);\n    if (isNaN(index)) {\n        return;\n    }\n    return _data[index];\n}\n\nfunction _setValueAt(api, _data, columns, pos, value) {\n    const index = _pos2index(pos, columns);\n    if (!isNaN(index)) {\n        _data[index] = value;\n    }\n    return api;\n}\n\nfunction _setAreaAt(api, columns, rows, pos, area) {\n    area.forEach((row, r) => {\n        const targetPos = [0, r + pos[1]];\n        if (targetPos[1] >= rows) {\n            return;\n        }\n        row.forEach((cell, c) => {\n            targetPos[0] = c + pos[0];\n            if (targetPos[0] >= columns) {\n                return;\n            }\n            api.setValueAt(targetPos, cell);\n        });\n    });\n    return api;\n}\n\nfunction _getAreaAt(api, columns, rows, pos, size) {\n    const end = [\n        Math.min(pos[0] + size[0], columns),\n        Math.min(pos[1] + size[1], rows),\n    ];\n    const area = [];\n    for (let r = pos[1]; r < end[1]; r++) {\n        const rArea = r - pos[1];\n        if (!area[rArea]) {\n            area[rArea] = [];\n        }\n        for (let c = pos[0]; c < end[0]; c++) {\n            const cArea = c - pos[0];\n            area[rArea][cArea] = api.getValueAt([c, r]);\n        }\n    }\n    return area;\n}\n\nfunction _findPosition(columns, data, callback) {\n    const index = data.findIndex(callback);\n    return (index >= 0) ? _index2pos(index, columns) : undefined;\n}\n\nfunction _findPositionInArea(api, columns, pos, size, callback) {\n    const area = api.getAreaAt(pos, size);\n    const flat = _flatten(area);\n    const areaIndex = flat.findIndex(callback);\n    if (areaIndex >= 0) {\n        const areaColumns = area[0].length;\n        const posInArea = _index2pos(areaIndex, areaColumns);\n        return [\n           pos[0] + posInArea[0],\n           pos[1] + posInArea[1],\n        ];\n    }\n}\n\nfunction _checkAreaFitsAt(columns, rows, pos, area) {\n    const fitsHorizontally = pos[0] + area[0].length <= columns;\n    const fitsVertically = pos[1] + area.length <= rows;\n    return fitsHorizontally && fitsVertically;\n}\n\nfunction _getRelativePosition(columns, rows, startPos, direction) {\n    const targetPos = _addPositions(startPos, direction);\n    if (_isNotInArea([columns, rows], targetPos)) {\n        return;\n    }\n    return targetPos;\n}\n\nfunction _moveCell(api, data, columns, rows, from, to) {\n    const fromIndex = _pos2index(from, columns);\n    const size = [columns, rows];\n    if (isNaN(fromIndex) || _isNotInArea(size, from)) {\n        throw new Error(`Trying to move cell from an invalid position. Given: [${from}]`);\n    }\n    const toIndex = _pos2index(to, columns);\n    if (isNaN(toIndex) || _isNotInArea(size, to)) {\n        throw new Error(`Trying to move cell to an invalid position. Given: [${to}]`);\n    }\n    const cell = data[fromIndex];\n    data.splice(fromIndex, 1);\n    data.splice(toIndex, 0, cell);\n    return api;\n}\n\nconst _isNotInArea = (areaSize, position) => (\n    position[0] < 0 || position[0] >= areaSize[0] ||\n    position[1] < 0 || position[1] >= areaSize[1]\n);\n\n/**\n * The gridl base function.\n *\n * @param {Array} data\n * @returns {{ toArray1D, toArray2D, index2pos, pos2index, rows, columns }}\n */\nfunction gridl(data) {\n\n    _isValidGridArray(data);\n\n    const _rows = data.length;\n    const _columns = data[0].length;\n    const _data = _flatten(data);\n\n    const api = {};\n\n    // getter for dimensions\n    api.columns = () => _columns;\n    api.rows = () => _rows;\n    api.size = () => [_columns, _rows];\n\n    // single value operations\n    api.getValueAt = pos => _getValueAt(_data, _columns, pos);                                                          // TODO: merge with getRelativeValue\n    api.setValueAt = (pos, value) => _setValueAt(api, _data, _columns, pos, value);                                     // TODO: provide optional relative offset (direction)\n    api.getRelativeValue = (pos, direction) => api.getValueAt(api.getRelativePosition(pos, direction));                 // TODO: merge this functionality into getValueAt() with an optional parameter \"direction\" that defaults to [0,0]\n    api.getRelativePosition = (pos, direction) => _getRelativePosition(_columns, _rows, pos, direction);                // TODO: rename to \"getPositionFrom\"\n\n    // moving cells\n    api.moveCell = (from, to) => _moveCell(api, _data, _columns, _rows, from, to);\n    api.moveCellFrom = (position, direction) => api.moveCell(position, _addPositions(position, direction));\n\n    // area operations\n    api.setAreaAt = (pos, area) => _setAreaAt(api, _columns, _rows, pos, area);\n    api.getAreaAt = (pos, size) => _getAreaAt(api, _columns, _rows, pos, size);\n    api.checkAreaFitsAt = (pos, area) => _checkAreaFitsAt(_columns, _rows, pos, area);\n\n    // finding\n    api.findPosition = callback => _findPosition(_columns, _data, callback);\n    api.findPositionInArea = (pos, size, callback) => _findPositionInArea(api, _columns, pos, size, callback);\n\n    // exporting data\n    api.getData = () => _toArray2D(_data, _columns);\n\n    return api;\n\n}\n\ngridl.directions = Object.freeze({\n    TOP:          [ 0, -1],\n    TOP_RIGHT:    [ 1, -1],\n    RIGHT:        [ 1,  0],\n    BOTTOM_RIGHT: [ 1,  1],\n    BOTTOM:       [ 0,  1],\n    BOTTOM_LEFT:  [-1,  1],\n    LEFT:         [-1,  0],\n    TOP_LEFT:     [-1, -1],\n});\n\ngridl.generateData = (columns, rows, callback) => {\n    const parsedColumns = parseInt(columns);\n    const parsedRows = parseInt(rows);\n    if (parsedColumns < 1 || isNaN(parsedColumns)) {\n        throw new Error(`You need to specify at least one column. Given: ${columns}`);\n    }\n    if (parsedRows < 1 || isNaN(parsedRows)) {\n        throw new Error(`You need to specify at least one row. Given: ${rows}`);\n    }\n    return Array.from({ length: parsedRows }, (vr, row) => {\n        return Array.from({ length: parsedColumns }, (vc, column) => {\n            return callback({ column, row });\n        });\n    });\n};\n\ngridl.generate = (columns, rows, callback) => gridl(gridl.generateData(columns, rows, callback));\n\nexport default gridl;\n\n/*\n * TODO: support fancy syntax like:\n *\n * - moveCellAt(pos).to(destination)\n * - moveCellAt(pos).direction(dir)\n * - goto(pos).move.to(destination)\n * - goto(pos).move.direction(direction)\n * - goto(pos).value.get(value)\n * - goto(pos).value.set(value)\n * - goto(pos).checkAreaFits(area)\n * ...\n *\n */\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}